{"version":3,"sources":["react-wipes/Overlay.jsx","react-wipes/ClockWipe.jsx","react-wipes/StarWipe.jsx","react-wipes/PortalWipe.jsx","theme/selectors.js","views/Home.jsx","theme/actions.js","Routes.jsx","theme/index.js","theme/reducer.js","store.js","App.js","serviceWorker.js","index.js"],"names":["Overlay","children","message","start","onFinish","timeout","React","useState","isVisible","setIsVisible","top","setTop","innerHeight","setInnerHeight","useEffect","mounted","_timeout","setTimeout","clearTimeout","parseInt","window","scrollY","style","display","position","width","height","left","overflow","zIndex","transform","props","CircleShape","color","circle","document","getElementById","angle","timer","setInterval","setAttribute","clearInterval","id","xmlns","viewBox","bottom","right","cx","cy","r","fill","stroke","strokeWidth","strokeDasharray","ClockWipe","sideWidth","setSideWidth","innerWidth","delay","anime","stagger","duration","scale","easing","background","borderRadius","PortalWipe","getState","state","themeReducer","isDarkTheme","getPrimaryColor","primaryColor","Logo","Grid","container","alignItems","Tooltip","title","Box","m","alt","className","src","Typography","variant","to","Install","open","setOpen","direction","justify","item","ClickAwayListener","onClickAway","PopperProps","disablePortal","onClose","disableFocusListener","disableHoverListener","disableTouchListener","cursor","onClick","navigator","clipboard","writeText","fontSize","Home","dispatch","useDispatch","useSelector","trigger","useScrollTrigger","target","undefined","Slide","appear","in","AppBar","spacing","overlay","StarWipeOverlay","AppLink","onChangeComplete","type","setPrimaryColor","hex","role","aria-label","PortalOverlay","location","useLocation","replace","e","href","pathname","reload","preventDefault","Routes","path","component","withBounceWipe","generateTheme","createMuiTheme","palette","primary","colors","orange","appBar","drawer","green","lightGreen","blue","purple","lime","red","lightBlue","blueGrey","main","brown","initialState","localStorage","getItem","rootReducer","combineReducers","action","setItem","createStore","applyMiddleware","thunk","ConnectedApp","darkTheme","ThemeProvider","theme","CssBaseline","App","store","Boolean","hostname","match","ReactDOM","render","StrictMode","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"iWAEO,SAASA,EAAT,GAAiE,IAA/CC,EAA8C,EAA9CA,SAAUC,EAAoC,EAApCA,QAASC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,SAAUC,EAAU,EAAVA,QAAU,EACnCC,IAAMC,UAAS,GADoB,mBAC9DC,EAD8D,KACnDC,EADmD,OAE/CH,IAAMC,SAAS,GAFgC,mBAE9DG,EAF8D,KAEzDC,EAFyD,OAG/BL,IAAMC,SAAS,GAHgB,mBAG9DK,EAH8D,KAGjDC,EAHiD,KAsBrE,OAlBAP,IAAMQ,WAAU,WACd,IAAIC,GAAU,EACd,GAAKZ,EAAL,CACA,IAAIa,EAAWC,YAAW,WACpBb,GACFA,IAEEW,GAASN,GAAa,KACzBJ,GAAoB,KACvB,OAAO,WACLU,GAAU,EACVG,aAAaF,OAEd,CAACb,EAAOC,EAAUC,IACrBC,IAAMQ,WAAU,WACdH,EAAOQ,SAASC,OAAOC,QAAS,KAChCR,EAAeO,OAAOR,eACrB,IAED,oCACE,yBAAKU,MAAO,CACVC,QAASf,EAAY,QAAU,OAC/BgB,SAAU,WACVC,MAAO,OACPC,OAAQ,OACRhB,IAAKA,EACLiB,KAAM,EACNC,SAAU,SACVC,OAAQ,MAEP5B,GAEH,yBAAKqB,MAAO,CACVC,QAASf,EAAY,QAAU,OAC/BgB,SAAU,WACVd,IAAKA,EAAME,EAAc,EACzBe,KAAM,MACNC,SAAU,SACVC,OAAQ,IACRC,UAAW,0BAEV5B,IC5CF,SAASF,EAAQ+B,GACtB,OACE,kBAAC,EAAgBA,EACf,yBAAKT,MAAO,CAACC,QAAQ,OAAQE,MAAO,OAAQC,OAAQ,SAClD,kBAACM,EAAD,CAAaC,MAAOF,EAAME,UAKlC,SAASD,EAAT,GAA+B,IAATC,EAAQ,EAARA,MAepB,OAbA3B,IAAMQ,WAAU,WACd,IAAIoB,EAASC,SAASC,eAAe,cAEjCC,EAAQ,EAEZjB,OAAOkB,MAAQlB,OAAOmB,aAAY,WAC9BL,EAAOM,aAAa,mBAAoBH,EAAQ,WAC5CA,GAAS,KACTjB,OAAOqB,cAAcrB,OAAOkB,OAEhCD,GANkB,IAFP,MAUd,IAED,yBACEZ,MAAM,OACNC,OAAO,OACPgB,GAAG,uCACHC,MAAM,6BACNC,QAAQ,eACRtB,MArBQ,CAAEE,SAAS,QAASd,IAAI,EAAGmC,OAAO,EAAGlB,KAAK,GAAImB,MAAM,EAAGhB,UAAW,eAuB1E,4BAAQiB,GAAG,OAAOC,GAAG,MAAMC,EAAE,KAAKP,GAAG,aAAaQ,KAAK,OACrDC,OAAM,UAAKlB,GAAgB,WAAamB,YAAY,MAAMC,gBAAgB,UAC1EvB,UAAU,yBAIX,SAASwB,EAAT,GAAkD,IAA9BrB,EAA6B,EAA7BA,MAAOhC,EAAsB,EAAtBA,SAAsB,IAAZC,eAAY,MAAJ,GAAI,EACtD,OACE,6BACE,kBAAC,EAAD,CAASA,QAASA,EAAS+B,MAAOA,EAAO9B,OAAO,EAAME,QAAS,MAC9DJ,G,OCaA,I,QCvDA,SAASD,EAAQ+B,GAAQ,IACvBE,EAASF,EAATE,MADsB,EAEK3B,IAAMC,SAAS,GAFpB,mBAEtBgD,EAFsB,KAEXC,EAFW,KAM7B,OAHAlD,IAAMQ,WAAU,WACd0C,EAAapC,OAAOqC,WAAarC,OAAOR,YAAcQ,OAAOqC,WAAarC,OAAOR,eAChF,IAED,kBAAC,EAAgBmB,EACf,yBAAKT,MAAO,CAACC,QAAQ,OAAQE,MAAO,OAAQC,OAAQ,SAClD,kBAAC,IAAD,CAAOgC,MAAOC,QAAMC,QAAQ,KACrBC,SAAU,IACVC,MAAO,CAAC,EAAG,IAAK,GAChBC,OAAO,UAEZ,yBAAKzC,MAAO,CACV0C,WAAY/B,GAAgB,UAC5BgC,aAAc,MACdxC,MAAO8B,EACP7B,OAAQ6B,QAOb,SAASW,EAAT,GAAmD,IAA9BjC,EAA6B,EAA7BA,MAAOhC,EAAsB,EAAtBA,SAAsB,IAAZC,eAAY,MAAJ,GAAI,EACvD,OACE,6BACE,kBAAC,EAAD,CAAS+B,MAAOA,EAAO9B,OAAO,EAAMD,QAASA,IAC5CD,GAKA,I,kHCtCP,SAASkE,EAASC,GAChB,OAAOA,EAAMC,aAER,SAASC,EAAYF,GAC1B,OAAOD,EAASC,GAAOE,YAElB,SAASC,EAAgBH,GAC9B,OAAOD,EAASC,GAAOI,a,oBCazB,SAASC,EAAT,GAA+B,IAAhBD,EAAe,EAAfA,aACb,OACE,kBAACE,EAAA,EAAD,CAAMC,WAAS,EAACC,WAAW,UACzB,kBAACC,EAAA,EAAD,CAASC,MAAM,6BACb,kBAACC,EAAA,EAAD,CAAKC,EAAG,GACN,yBACEC,IAAI,kBACJC,UAAU,YACVzD,MAAM,OACN0D,IAAI,mCAIV,kBAACC,EAAA,EAAD,CAAYC,QAAQ,MAClB,kBAAC,IAAD,CACE/D,MAAO,CAACW,MAAOuC,GACfc,GAAG,KAFL,gBAKF,kBAACT,EAAA,EAAD,CAASC,MAAM,2CACb,kBAACC,EAAA,EAAD,CAAKC,EAAG,GACN,yBACEC,IAAI,mBACJC,UAAU,kBACVzD,MAAM,OACN0D,IAAI,oCAQhB,SAASI,IACP,IADiB,EAEOjF,IAAMC,UAAS,GAFtB,mBAEViF,EAFU,KAEJC,EAFI,KAGjB,OACE,kBAACf,EAAA,EAAD,CAAMC,WAAS,EAACe,UAAU,MAAMC,QAAQ,UACtC,kBAACjB,EAAA,EAAD,CAAMkB,MAAI,GACR,kBAACR,EAAA,EAAD,CAAYC,QAAQ,WALL,yBAOjB,kBAACX,EAAA,EAAD,CAAMkB,MAAI,GACR,kBAACb,EAAA,EAAD,CAAKC,EAAG,GACN,kBAACa,EAAA,EAAD,CAAmBC,YAAa,kBAAML,GAAQ,KAC5C,kBAACZ,EAAA,EAAD,CACEkB,YAAa,CACXC,eAAe,GAEjBC,QAAS,kBAAMR,GAAQ,IACvBD,KAAMA,EACNU,sBAAoB,EACpBC,sBAAoB,EACpBC,sBAAoB,EACpBtB,MAAM,WAEN,yBACExD,MAAO,CAAC+E,OAAQ,WAChBC,QAAS,WACPC,UAAUC,UAAUC,UAxBf,wBAyBLhB,GAAQ,KAEX,kBAAC,IAAD,CAAciB,SAAS,gBAS/B,SAASC,IACd,IAAMC,EAAWC,cACXrC,EAAesC,YAAYvC,GAC3BwC,EAAUC,YAAiB,CAACC,OAAQ7F,aAAkB8F,IAC5D,OACE,yBAAKhC,UAAU,cACb,kBAACiC,EAAA,EAAD,CAAOC,QAAQ,EAAO1B,UAAU,OAAO2B,IAAKN,GAC1C,kBAACO,EAAA,EAAD,CAAQhG,MAAO,CAACO,OAAQ,EAAGmC,WAAY,YACrC,kBAACU,EAAA,EAAD,CAAMC,WAAS,EAACe,UAAU,MAAMd,WAAW,SAASe,QAAQ,gBAAgB4B,QAAS,GACnF,kBAAC7C,EAAA,EAAD,CAAMkB,MAAI,GACR,kBAACnB,EAAD,CAAMD,aAAcA,KAEtB,kBAACE,EAAA,EAAD,CAAMkB,MAAI,GACR,kBAACL,EAAD,UAKR,kBAACR,EAAA,EAAD,CAAKC,EAAG,IACR,kBAACI,EAAA,EAAD,CAAYC,QAAQ,MAApB,UACA,kBAACN,EAAA,EAAD,CAAKC,EAAG,GACN,kBAAC,iBAAD,CACE/C,MAAOuC,EACPgD,QAASC,UACTnC,GAAG,0CAHL,2CAMF,kBAACF,EAAA,EAAD,CAAYC,QAAQ,MAApB,YACA,kBAACqC,EAAD,CAASpC,GAAG,eAAZ,cACA,kBAACoC,EAAD,CAASpC,GAAG,cAAZ,aACA,kBAACoC,EAAD,CAASpC,GAAG,eAAZ,cACA,kBAACoC,EAAD,CAASpC,GAAG,gBAAZ,eACA,kBAACoC,EAAD,CAASpC,GAAG,aAAZ,YACA,kBAACoC,EAAD,CAASpC,GAAG,aAAZ,YACA,kBAACoC,EAAD,CAASpC,GAAG,mBAAZ,kBACA,kBAACoC,EAAD,CAASpC,GAAG,aAAZ,YACA,kBAACoC,EAAD,CAASpC,GAAG,mBAAZ,kBACA,kBAACoC,EAAD,CAASpC,GAAG,eAAZ,cACA,kBAACoC,EAAD,CAASpC,GAAG,uBAAZ,sBACA,kBAACoC,EAAD,CAASpC,GAAG,qBAAZ,oBACA,kBAACoC,EAAD,CAASpC,GAAG,WAAZ,UACA,kBAACoC,EAAD,CAASpC,GAAG,gBAAZ,UACA,kBAACF,EAAA,EAAD,CAAYC,QAAQ,MAApB,iBACA,kBAACN,EAAA,EAAD,CAAKC,EAAG,GACN,kBAAC,IAAD,CAAc2C,iBAAkB,SAAA1F,GAC9B2E,ECjIH,SAAyB3E,GAC9B,MAAO,CACL2F,KAAM,oBACN3F,SD8He4F,CAAgB5F,EAAM6F,UAMnC,kBAAC1C,EAAA,EAAD,CAAYC,QAAQ,MAApB,OACA,kBAACN,EAAA,EAAD,CAAKC,EAAG,GACN,kBAAC,iBAAD,CACE9E,QAEI,4CAKJ+B,MAAOuC,EACPc,GAAG,6CATL,8CAYF,kBAACP,EAAA,EAAD,CAAKC,EAAG,GACN,kBAACN,EAAA,EAAD,CAAMC,WAAS,EAACC,WAAW,WAAWe,QAAQ,SAAS4B,QAAS,GAC9D,kBAAC7C,EAAA,EAAD,CAAMkB,MAAI,GACR,kBAACR,EAAA,EAAD,kBAAsB,0BAAM2C,KAAK,MAAMC,aAAW,SAA5B,gBAAtB,QAEF,kBAACtD,EAAA,EAAD,CAAMkB,MAAI,GACR,kBAAC,iBAAD,CACE3D,MAAOuC,EACPgD,QAASS,EACT3C,GAAG,0BAHL,mBAYZ,SAASoC,EAAT,GAAkC,IAAhBzH,EAAe,EAAfA,SAAUqF,EAAK,EAALA,GACpBd,EAAesC,YAAYvC,GAC3B2D,EAAWC,cACjB,OACE,kBAACpD,EAAA,EAAD,CAAKC,EAAG,GACN,kBAAC,IAAD,CACEoD,SAAS,EACT9G,MAAO,CAACW,MAAOuC,GACf8B,QAAS,SAAC+B,GACRH,EAASI,KAAK,gBAAgBhD,EAC1B4C,EAASK,WAAajD,IACxBlE,OAAO8G,SAASM,QAAO,GACvBH,EAAEI,mBAGNnD,GAAIA,GACHrF,IEpKF,SAASyI,IACd,IAAMlE,EAAesC,YAAYvC,GACjC,OACE,kBAAC,IAAD,KACI,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOoE,KAAK,aACV,kBAAC,eAAD,CAAc1G,MAAOuC,GACnB,kBAAC,EAAD,QAGJ,kBAAC,IAAD,CAAOmE,KAAK,mBACV,kBAAC,oBAAD,CAAmB1G,MAAOuC,GACxB,kBAAC,EAAD,QAGJ,kBAAC,IAAD,CAAOmE,KAAK,aACR,kBAAC,eAAD,CAAc1G,MAAOuC,GACnB,kBAAC,EAAD,QAGN,kBAAC,IAAD,CAAOmE,KAAK,mBACR,kBAAC,oBAAD,CAAmB1G,MAAOuC,GACxB,kBAAC,EAAD,QAGN,kBAAC,IAAD,CAAOmE,KAAK,eACR,kBAAC,YAAD,CAAW1G,MAAOuC,GAChB,kBAAC,EAAD,QAGN,kBAAC,IAAD,CAAOmE,KAAK,gBACR,kBAAC,aAAD,CAAY1G,MAAOuC,GACjB,kBAAC,EAAD,QAGN,kBAAC,IAAD,CAAOmE,KAAK,eACR,kBAAC,iBAAD,CAAgB1G,MAAOuC,GACrB,kBAAC,EAAD,QAGN,kBAAC,IAAD,CAAOmE,KAAK,uBACV,kBAAC,iBAAD,CAAgB1G,MAAOuC,EAAckB,UAAU,WAC7C,kBAAC,EAAD,QAGJ,kBAAC,IAAD,CAAOiD,KAAK,qBACR,kBAAC,sBAAD,CAAqB1G,MAAOuC,EAActE,QAAQ,WAChD,kBAAC,EAAD,QAGN,kBAAC,IAAD,CAAOyI,KAAK,aACR,kBAAC,YAAD,CAAW1G,MAAOuC,GAChB,kBAAC,EAAD,QAGN,kBAAC,IAAD,CAAOmE,KAAK,gBACR,kBAACzE,EAAD,CAAYjC,MAAOuC,GACjB,kBAAC,EAAD,QAGN,kBAAC,IAAD,CAAOmE,KAAK,cACR,kBAAC,WAAD,CAAU1G,MAAOuC,GACf,kBAAC,EAAD,QAGN,kBAAC,IAAD,CAAOoE,UAAWC,yBAAelC,EAAMnC,GAAemE,KAAK,YAC3D,kBAAC,IAAD,CAAOA,KAAK,eACV,kBAACrF,EAAD,CAAWrB,MAAOuC,EAActE,QAAS,yBAAKoB,MAAO,CAAC0C,WAAY,UAAzB,4CACvC,kBAAC,EAAD,QAGJ,kBAAC,IAAD,CAAO2E,KAAK,KACV,kBAAC,EAAD,S,uCCjECG,GAnBYC,YAAe,CACtCC,QAAS,CACPC,QAASC,IAAOC,OAEhBvB,KAAM,UAGWmB,YAAe,CAClClH,OAAQ,CACNuH,OAAQ,KACRC,OAAQ,MAEVL,QAAS,CACPC,QAASC,IAAOC,OAChBvB,KAAM,WAKmB,SAACpD,EAAcF,GAC1C,IAAIrC,EAAQiH,IAAOC,OAsBnB,MArBqB,UAAjB3E,EACFvC,EAAQiH,IAAOI,MACW,gBAAjB9E,EACTvC,EAAQiH,IAAOK,WACW,SAAjB/E,EACTvC,EAAQiH,IAAOM,KACW,WAAjBhF,EACTvC,EAAQiH,IAAOO,OACW,WAAjBjF,EACTvC,EAAQiH,IAAOC,OACW,SAAjB3E,EACTvC,EAAQiH,IAAOQ,KACW,QAAjBlF,EACTvC,EAAQiH,IAAOS,IACW,eAAjBnF,EACTvC,EAAQiH,IAAOU,UACW,cAAjBpF,EACTvC,EAAQiH,IAAOW,SACW,gBAAjBrF,IACTvC,EAAQ,CAAC6H,KAAKC,IAAM,OAEfhB,YAAe,CACpBlH,OAAQ,CACNuH,OAAQ,KACRC,OAAQ,MAEVL,QAAS,CACPC,QAAShH,EAET2F,KAAMtD,EAAc,OAAS,a,iBC/D7B0F,EAAe,CACnB1F,YAAa2F,aAAaC,QAAQ,iBAAkB,EACpD1F,aAAcyF,aAAaC,QAAQ,iBAAmB,WCExD,IAAMC,EAAcC,YAAgB,CAClC/F,aDAK,WAAqD,IAA/BD,EAA8B,uDAAtB4F,EAAcK,EAAQ,uCACzD,OAAQA,EAAOzC,MACb,IAAK,oBAEH,OADAqC,aAAaK,QAAQ,eAAgBlG,EAAME,aACpC,eACFF,EADL,CAEEE,aAAcF,EAAME,cAExB,IAAK,oBAEH,OADA2F,aAAaK,QAAQ,eAAgBD,EAAOpI,OACrC,eACFmC,EADL,CAEEI,aAAc6F,EAAOpI,QAEzB,QACE,OAAOmC,MCZEmG,cAAYJ,EAAaK,YAAgBC,MCExD,SAASC,IACP,IAAMlG,EAAesC,YAAYvC,GAC3BoG,EAAY7D,YAAYxC,GAC9B,OACE,kBAACsG,EAAA,EAAD,CACEC,MAAO/B,EAActE,EAAcmG,IAEnC,kBAACG,EAAA,EAAD,MACA,kBAACpC,EAAD,OAaSqC,OARf,WACE,OACE,kBAAC,IAAD,CAAUC,MAAOA,GACf,kBAACN,EAAD,QCdcO,QACW,cAA7B7J,OAAO8G,SAASgD,UAEe,UAA7B9J,OAAO8G,SAASgD,UAEhB9J,OAAO8G,SAASgD,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFnJ,SAASC,eAAe,SDyHpB,kBAAmBmE,WACrBA,UAAUgF,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAM3L,c","file":"static/js/main.a172231a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport function Overlay({children, message, start, onFinish, timeout}) {\r\n  const [isVisible, setIsVisible] = React.useState(true)\r\n  const [top, setTop] = React.useState(0)\r\n  const [innerHeight, setInnerHeight] = React.useState(0)\r\n  React.useEffect(() => {\r\n    let mounted = true\r\n    if (!start) return\r\n    let _timeout = setTimeout(()=>{\r\n      if (onFinish) {\r\n        onFinish()\r\n      }\r\n      if (mounted) setIsVisible(false)\r\n    }, timeout ? timeout : 900)\r\n    return () => {\r\n      mounted = false\r\n      clearTimeout(_timeout)\r\n    };\r\n  }, [start, onFinish, timeout])\r\n  React.useEffect(() => {\r\n    setTop(parseInt(window.scrollY, 10))\r\n    setInnerHeight(window.innerHeight);\r\n  }, [])\r\n  return (\r\n    <>\r\n      <div style={{\r\n        display: isVisible ? \"block\" : \"none\",\r\n        position: \"absolute\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        top: top,\r\n        left: 0,\r\n        overflow: \"hidden\",\r\n        zIndex: 100,\r\n      }}>\r\n        {children}\r\n      </div>\r\n      <div style={{\r\n        display: isVisible ? \"block\" : \"none\",\r\n        position: \"absolute\",\r\n        top: top + innerHeight / 2,\r\n        left: '46%',\r\n        overflow: \"hidden\",\r\n        zIndex: 100,\r\n        transform: 'translate(-50%, -50%)'\r\n      }}>\r\n        {message}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport {Overlay as BaseOverlay} from './Overlay'\r\n\r\nexport function Overlay(props) {\r\n  return (\r\n    <BaseOverlay {...props}>\r\n      <div style={{display:\"flex\", width: \"100%\", height: \"100%\"}}>\r\n        <CircleShape color={props.color} />\r\n      </div>\r\n    </BaseOverlay>\r\n  )\r\n}\r\nfunction CircleShape({color}) {\r\n  let style = { position:\"fixed\", top:0, bottom:0, left:80, right:0, transform: 'scale(7.0)' };\r\n  React.useEffect(() => {\r\n    var circle = document.getElementById('green-halo');\r\n    var interval = 30;\r\n    var angle = 0;\r\n    var angle_increment = 6;\r\n    window.timer = window.setInterval(function () {\r\n        circle.setAttribute(\"stroke-dasharray\", angle + \", 20000\");\r\n        if (angle >= 360) {\r\n            window.clearInterval(window.timer);\r\n        }\r\n        angle += angle_increment;\r\n    }, interval);\r\n  }, [])\r\n  return (\r\n    <svg\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      id=\"e350d5ca-b3f4-4409-80c7-c3f48cc0f93e\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 1024 768\"\r\n      style={style}\r\n      >\r\n      <circle cx=\"-183\" cy=\"500\" r=\"57\" id=\"green-halo\" fill=\"none\"\r\n        stroke={`${color ? color : '#0b556a'}`} strokeWidth=\"115\" strokeDasharray=\"0,20000\"\r\n        transform=\"rotate(-90,100,100)\" />\r\n     </svg>\r\n  )\r\n}\r\nexport function ClockWipe({color, children, message=''}){\r\n  return (\r\n    <div>\r\n      <Overlay message={message} color={color} start={true} timeout={2000}/>\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const withClockWipe = (Component, color, message='') => ({...props}) => {\r\n  return (\r\n    <ClockWipe color={color} message=''>\r\n      <Component {...props} />\r\n    </ClockWipe>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport {anime} from \"react-anime\";\r\nimport {Overlay as BaseOverlay} from './Overlay'\r\n\r\nexport function Overlay(props) {\r\n  return (\r\n    <BaseOverlay {...props}>\r\n      <div style={{display:\"flex\", width: \"100%\", height: \"100%\"}}>\r\n        <StarCutout color={props.color} />\r\n      </div>\r\n    </BaseOverlay>\r\n  )\r\n}\r\nfunction StarCutout({color}) {\r\n  let style = {\r\n    position:\"fixed\", top:0, bottom:0, left:0, right:0,\r\n    overflow: \"hidden\",\r\n  };\r\n  let ref = React.useRef(null)\r\n  React.useEffect(()=>{\r\n    if (ref && ref.current) {\r\n      var basicTimeline = anime.timeline();\r\n      basicTimeline\r\n        .add({\r\n          targets:ref.current,\r\n          scale: [1, 55],\r\n          duration: 3000,\r\n          easing: \"easeOutSine\"\r\n        })\r\n    }\r\n  }, [ref])\r\n  return (\r\n    <svg\r\n      ref={ref}\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      id=\"e350d5ca-b3f4-4409-80c7-c3f48cc0f93e\"\r\n      data-name=\"Star Cutout\"\r\n      viewBox=\"0 0 1024 768\"\r\n      style={style}\r\n      >\r\n      <path\r\n      d=\"M.5,767.5V.5h1023v767ZM540.55,436.78l-7-48.89,36.31-33.47L521.21,346,500.6,301.08l-23.08,43.66-49,5.74,34.39,35.44-9.7,48.42,44.33-21.75Z\"\r\n      fill={color ? color : \"#fff\"}\r\n      />\r\n      <path\r\n      fill={color ? color : \"#61dafb\"}\r\n       d=\"M1023,1V767H1V1H1023M477.2,344.28l-47.78,5.58-2,.24,1.41,1.45,33.5,34.53-9.45,47.17-.4,2,1.82-.9,43.19-21.19,41.94,23.57,1.76,1-.28-2-6.81-47.63,35.37-32.6L571,354.1l-2-.34-47.4-8.25L501.48,301.8l-.85-1.85-.94,1.8L477.2,344.28M1024,0H0V768H1024V0ZM453.85,433.45l9.55-47.69-33.87-34.9,48.31-5.65,22.73-43,20.3,44.2,47.91,8.33L533,387.7l6.88,48.15L497.51,412l-43.66,21.43Z\"/></svg>\r\n  )\r\n}\r\nexport function StarWipe({color, children, message=''}){\r\n  return (\r\n    <div>\r\n      <Overlay color={color} start={true} message={message} />\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const withStarWipe = (Component, color, message='') => ({...props}) => {\r\n  return (\r\n    <StarWipe color={color} message={message}>\r\n      <Component {...props} />\r\n    </StarWipe>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport Anime, {anime} from \"react-anime\";\r\nimport {Overlay as BaseOverlay} from './Overlay'\r\n\r\nexport function Overlay(props) {\r\n  const {color} = props\r\n  const [sideWidth, setSideWidth] = React.useState(0);\r\n  React.useEffect(() => {\r\n    setSideWidth(window.innerWidth > window.innerHeight ? window.innerWidth : window.innerHeight)\r\n  }, [])\r\n  return (\r\n    <BaseOverlay {...props}>\r\n      <div style={{display:\"flex\", width: \"100%\", height: \"100%\"}}>\r\n        <Anime delay={anime.stagger(100)}\r\n               duration={1000}\r\n               scale={[0, 1.5, 0]}\r\n               easing='linear'\r\n        >\r\n          <div style={{\r\n            background: color ? color : \"#0b556a\",\r\n            borderRadius: '50%',\r\n            width: sideWidth,\r\n            height: sideWidth\r\n          }}/>\r\n        </Anime>\r\n      </div>\r\n    </BaseOverlay>\r\n  )\r\n}\r\nexport function PortalWipe({color, children, message=''}){\r\n  return (\r\n    <div>\r\n      <Overlay color={color} start={true} message={message} />\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const withPortalWipe = (Component, color, message='') => ({...props}) => {\r\n  return (\r\n    <PortalWipe color={color} message={message}>\r\n      <Component {...props} />\r\n    </PortalWipe>\r\n  )\r\n}\r\n","function getState(state){\r\n  return state.themeReducer;\r\n}\r\nexport function isDarkTheme(state){\r\n  return getState(state).isDarkTheme;\r\n}\r\nexport function getPrimaryColor(state){\r\n  return getState(state).primaryColor;\r\n}\r\n","import React from 'react'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Box from '@material-ui/core/Box'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Slide from '@material-ui/core/Slide'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger'\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy'\r\nimport {TransitionLink} from 'react-wipes'\r\nimport {Overlay as StarWipeOverlay} from 'react-wipes/StarWipe'\r\nimport {Overlay as PortalOverlay} from '../react-wipes/PortalWipe'\r\nimport {Link, useLocation} from \"react-router-dom\";\r\nimport {CirclePicker} from 'react-color'\r\nimport {setPrimaryColor} from '../theme/actions'\r\nimport {getPrimaryColor} from \"../theme/selectors\";\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport './Home.css'\r\n\r\nfunction Logo({primaryColor}) {\r\n  return (\r\n    <Grid container alignItems=\"center\">\r\n      <Tooltip title=\"React Wipes are reel fun.\">\r\n        <Box m={1}>\r\n          <img\r\n            alt=\"left-title-icon\"\r\n            className=\"logo-icon\"\r\n            width=\"20px\"\r\n            src=\"/react-wipes/cinema_icon.svg\"\r\n          />\r\n        </Box>\r\n      </Tooltip>\r\n      <Typography variant=\"h5\">\r\n        <Link\r\n          style={{color: primaryColor}}\r\n          to=\"/\"\r\n        >React Wipes</Link>\r\n      </Typography>\r\n      <Tooltip title=\"Use them once, and they'll reel you in.\">\r\n        <Box m={1}>\r\n          <img\r\n            alt=\"right-title-icon\"\r\n            className=\"right-logo-icon\"\r\n            width=\"20px\"\r\n            src=\"/react-wipes/cinema_icon.svg\"\r\n          />\r\n        </Box>\r\n      </Tooltip>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nfunction Install() {\r\n  const INSTALL_TEXT = \"yarn add react-wipes\"\r\n  const [open, setOpen] = React.useState(false)\r\n  return (\r\n    <Grid container direction=\"row\" justify=\"center\">\r\n      <Grid item>\r\n        <Typography variant=\"caption\">{INSTALL_TEXT}</Typography>\r\n      </Grid>\r\n      <Grid item>\r\n        <Box m={1}>\r\n          <ClickAwayListener onClickAway={() => setOpen(false)}>\r\n            <Tooltip\r\n              PopperProps={{\r\n                disablePortal: true,\r\n              }}\r\n              onClose={() => setOpen(false)}\r\n              open={open}\r\n              disableFocusListener\r\n              disableHoverListener\r\n              disableTouchListener\r\n              title=\"Copied!\"\r\n            >\r\n              <div\r\n                style={{cursor: 'pointer'}}\r\n                onClick={() => {\r\n                  navigator.clipboard.writeText(INSTALL_TEXT)\r\n                  setOpen(true)\r\n                }}\r\n              ><FileCopyIcon fontSize=\"small\"/></div>\r\n            </Tooltip>\r\n          </ClickAwayListener>\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport function Home() {\r\n  const dispatch = useDispatch()\r\n  const primaryColor = useSelector(getPrimaryColor)\r\n  const trigger = useScrollTrigger({target: window ? window : undefined });\r\n  return (\r\n    <div className=\"App-header\">\r\n      <Slide appear={false} direction=\"down\" in={!trigger}>\r\n        <AppBar style={{zIndex: 0, background: '#424242'}}>\r\n          <Grid container direction=\"row\" alignItems=\"center\" justify=\"space-between\" spacing={2}>\r\n            <Grid item>\r\n              <Logo primaryColor={primaryColor} />\r\n            </Grid>\r\n            <Grid item>\r\n              <Install />\r\n            </Grid>\r\n          </Grid>\r\n        </AppBar>\r\n      </Slide>\r\n      <Box m={4} />\r\n      <Typography variant=\"h2\">Github</Typography>\r\n      <Box m={1}>\r\n        <TransitionLink\r\n          color={primaryColor}\r\n          overlay={StarWipeOverlay}\r\n          to=\"https://github.com/rhigdon/react-wipes\"\r\n        >https://github.com/rhigdon/react-wipes</TransitionLink>\r\n      </Box>\r\n      <Typography variant=\"h2\">Examples</Typography>\r\n      <AppLink to=\"/clock-wipe\">Clock Wipe</AppLink>\r\n      <AppLink to=\"/star-wipe\">Star Wipe</AppLink>\r\n      <AppLink to=\"/heart-wipe\">Heart Wipe</AppLink>\r\n      <AppLink to=\"/matrix-wipe\">Matrix Wipe</AppLink>\r\n      <AppLink to=\"/scale-up\">Scale Up</AppLink>\r\n      <AppLink to=\"/vertical\">Vertical</AppLink>\r\n      <AppLink to=\"/split-vertical\">Split Vertical</AppLink>\r\n      <AppLink to=\"/diagonal\">Diagonal</AppLink>\r\n      <AppLink to=\"/split-diagonal\">Split Diagonal</AppLink>\r\n      <AppLink to=\"/horizontal\">Horizontal</AppLink>\r\n      <AppLink to=\"/horizontal-reverse\">Horizontal Reverse</AppLink>\r\n      <AppLink to=\"/split-horizontal\">Split Horizontal</AppLink>\r\n      <AppLink to=\"/bounce\">Bounce</AppLink>\r\n      <AppLink to=\"/portal-wipe\">Portal</AppLink>\r\n      <Typography variant=\"h2\">Color Support</Typography>\r\n      <Box m={3}>\r\n        <CirclePicker onChangeComplete={color => {\r\n          dispatch(setPrimaryColor(color.hex))\r\n        }}/>\r\n      </Box>\r\n      {/**\r\n        <Link className=\"App-link\" to=\"/next\">Matrix</Link>\r\n      */}\r\n      <Typography variant=\"h2\">NPM</Typography>\r\n      <Box m={1}>\r\n        <TransitionLink\r\n          message={\r\n            (\r\n              <div>\r\n                Goodbye Now\r\n              </div>\r\n            )\r\n          }\r\n          color={primaryColor}\r\n          to=\"https://www.npmjs.com/package/react-wipes\"\r\n        >https://www.npmjs.com/package/react-wipes</TransitionLink>\r\n      </Box>\r\n      <Box m={5}>\r\n        <Grid container alignItems=\"baseline\" justify=\"center\" spacing={1}>\r\n          <Grid item>\r\n            <Typography>Made with <span role=\"img\" aria-label=\"heart\">❤️</span> by</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <TransitionLink\r\n              color={primaryColor}\r\n              overlay={PortalOverlay}\r\n              to=\"https://ryanhigdon.com\"\r\n            >Ryan Higdon</TransitionLink>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction AppLink({children, to}) {\r\n  const primaryColor = useSelector(getPrimaryColor)\r\n  const location = useLocation()\r\n  return (\r\n    <Box m={1}>\r\n      <Link\r\n        replace={true}\r\n        style={{color: primaryColor}}\r\n        onClick={(e)=>{\r\n          location.href=\"/react-wipes#\"+to\r\n          if (location.pathname === to) {\r\n            window.location.reload(true)\r\n            e.preventDefault()\r\n          }\r\n        }}\r\n        to={to}>\r\n        {children}\r\n      </Link>\r\n    </Box>\r\n  )\r\n}\r\n","export function toggleDarkTheme(){\r\n  return {\r\n    type: 'TOGGLE_DARK_THEME',\r\n  }\r\n}\r\n\r\nexport function setPrimaryColor(color){\r\n  return {\r\n    type: 'SET_PRIMARY_COLOR',\r\n    color,\r\n  }\r\n}\r\n","import React from 'react'\r\nimport {\r\n  //ClockWipe,\r\n  DiagonalWipe,\r\n  HorizontalWipe,\r\n  MatrixWipe,\r\n  ScaleWipe,\r\n  StarWipe,\r\n  VerticalWipe,\r\n  withBounceWipe,\r\n  HeartWipe,\r\n  SplitDiagonalWipe,\r\n  SplitHorizontalWipe,\r\n  SplitVerticalWipe\r\n} from 'react-wipes'\r\nimport {ClockWipe, PortalWipe} from './react-wipes'\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport {Home} from './views/Home'\r\nimport {useSelector} from 'react-redux'\r\nimport {getPrimaryColor} from './theme/selectors'\r\n\r\nexport function Routes() {\r\n  const primaryColor = useSelector(getPrimaryColor)\r\n  return (\r\n    <Router>\r\n        <Switch>\r\n          <Route path=\"/diagonal\">\r\n            <DiagonalWipe color={primaryColor}>\r\n              <Home />\r\n            </DiagonalWipe>\r\n          </Route>\r\n          <Route path=\"/split-diagonal\">\r\n            <SplitDiagonalWipe color={primaryColor}>\r\n              <Home />\r\n            </SplitDiagonalWipe>\r\n          </Route>\r\n          <Route path=\"/vertical\">\r\n              <VerticalWipe color={primaryColor}>\r\n                <Home />\r\n              </VerticalWipe>\r\n          </Route>\r\n          <Route path=\"/split-vertical\">\r\n              <SplitVerticalWipe color={primaryColor}>\r\n                <Home />\r\n              </SplitVerticalWipe>\r\n          </Route>\r\n          <Route path=\"/heart-wipe\">\r\n              <HeartWipe color={primaryColor}>\r\n                <Home />\r\n              </HeartWipe>\r\n          </Route>\r\n          <Route path=\"/matrix-wipe\">\r\n              <MatrixWipe color={primaryColor}>\r\n                <Home />\r\n              </MatrixWipe>\r\n          </Route>\r\n          <Route path=\"/horizontal\">\r\n              <HorizontalWipe color={primaryColor}>\r\n                <Home />\r\n              </HorizontalWipe>\r\n          </Route>\r\n          <Route path=\"/horizontal-reverse\">\r\n            <HorizontalWipe color={primaryColor} direction='reverse'>\r\n              <Home />\r\n            </HorizontalWipe>\r\n          </Route>\r\n          <Route path=\"/split-horizontal\">\r\n              <SplitHorizontalWipe color={primaryColor} message='Testing'>\r\n                <Home />\r\n              </SplitHorizontalWipe>\r\n          </Route>\r\n          <Route path=\"/scale-up\">\r\n              <ScaleWipe color={primaryColor}>\r\n                <Home />\r\n              </ScaleWipe>\r\n          </Route>\r\n          <Route path=\"/portal-wipe\">\r\n              <PortalWipe color={primaryColor}>\r\n                <Home />\r\n              </PortalWipe>\r\n          </Route>\r\n          <Route path=\"/star-wipe\">\r\n              <StarWipe color={primaryColor}>\r\n                <Home />\r\n              </StarWipe>\r\n          </Route>\r\n          <Route component={withBounceWipe(Home, primaryColor)} path=\"/bounce\" />\r\n          <Route path=\"/clock-wipe\">\r\n            <ClockWipe color={primaryColor} message={<div style={{background: 'white'}}>This is an example of a custom message!</div>}>\r\n              <Home />\r\n            </ClockWipe>\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n    </Router>\r\n  )\r\n}\r\n","import { createMuiTheme } from '@material-ui/core';\r\n// const darkTheme = createMuiTheme({\r\n//   palette: {\r\n//     type: 'dark',\r\n//   },\r\n// });\r\n// import purple from '@material-ui/core/colors/purple';\r\n// import green from '@material-ui/core/colors/green';\r\n// import orange from '@material-ui/core/colors/orange';\r\n// import red from '@material-ui/core/colors/red';\r\nimport { colors } from '@material-ui/core';\r\nimport brown from '@material-ui/core/colors/brown';\r\n\r\nexport const darkTheme = createMuiTheme({\r\n  palette: {\r\n    primary: colors.orange,\r\n    // secondary: green,\r\n    type: 'dark',\r\n  },\r\n});\r\nexport const theme = createMuiTheme({\r\n  zIndex: {\r\n    appBar: 1200,\r\n    drawer: 1100\r\n  },\r\n  palette: {\r\n    primary: colors.orange,\r\n    type: 'light',\r\n  },\r\n});\r\n\r\n\r\nexport const generateTheme = (primaryColor, isDarkTheme) => {\r\n  let color = colors.orange\r\n  if (primaryColor === \"GREEN\"){\r\n    color = colors.green;\r\n  } else if (primaryColor === \"LIGHT_GREEN\"){\r\n    color = colors.lightGreen;\r\n  } else if (primaryColor === \"BLUE\"){\r\n    color = colors.blue;\r\n  } else if (primaryColor === \"PURPLE\"){\r\n    color = colors.purple;\r\n  } else if (primaryColor === \"ORANGE\"){\r\n    color = colors.orange;\r\n  } else if (primaryColor === \"LIME\") {\r\n    color = colors.lime;\r\n  } else if (primaryColor === \"RED\"){\r\n    color = colors.red;\r\n  } else if (primaryColor === \"LIGHT_BLUE\"){\r\n    color = colors.lightBlue;\r\n  } else if (primaryColor === \"BLUE_GREY\"){\r\n    color = colors.blueGrey;\r\n  } else if (primaryColor === \"LIGHT_BROWN\"){\r\n    color = {main:brown[300]};\r\n  }\r\n  return createMuiTheme({\r\n    zIndex: {\r\n      appBar: 1200,\r\n      drawer: 1100\r\n    },\r\n    palette: {\r\n      primary: color,\r\n      // secondary: green,\r\n      type: isDarkTheme ? 'dark' : 'light',\r\n    },\r\n  })\r\n}\r\n","const initialState = {\r\n  isDarkTheme: localStorage.getItem(\"isDarkTheme\") || false,\r\n  primaryColor: localStorage.getItem(\"primaryColor\") || \"#e91e63\",\r\n};\r\n\r\nexport function themeReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"TOGGLE_DARK_THEME\":\r\n      localStorage.setItem(\"isDarkTheme\", !state.isDarkTheme);\r\n      return {\r\n        ...state,\r\n        isDarkTheme: !state.isDarkTheme,\r\n      };\r\n    case \"SET_PRIMARY_COLOR\":\r\n      localStorage.setItem(\"primaryColor\", action.color);\r\n      return {\r\n        ...state,\r\n        primaryColor: action.color,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers, createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {themeReducer} from './theme/reducer'\r\n\r\nconst rootReducer = combineReducers({\r\n  themeReducer,\r\n})\r\n\r\nexport default createStore(rootReducer, applyMiddleware(thunk));\r\n","import React from 'react';\r\nimport { Provider, useSelector } from 'react-redux'\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport './App.css';\r\nimport {Routes} from './Routes'\r\nimport {generateTheme} from './theme';\r\nimport store from './store'\r\nimport {getPrimaryColor, isDarkTheme} from \"./theme/selectors\";\r\n\r\nfunction ConnectedApp() {\r\n  const primaryColor = useSelector(getPrimaryColor)\r\n  const darkTheme = useSelector(isDarkTheme)\r\n  return (\r\n    <ThemeProvider\r\n      theme={generateTheme(primaryColor, darkTheme)}\r\n    >\r\n      <CssBaseline />\r\n      <Routes />\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <ConnectedApp />\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}