{"version":3,"sources":["lib/src/Overlay.jsx","lib/src/HorizontalWipe.jsx","lib/src/ScaleWipe.jsx","lib/src/SplitHorizontalWipe.jsx","lib/src/SplitVerticalWipe.jsx","lib/src/StarWipe.jsx","lib/src/VerticalWipe.jsx","lib/src/TransitionLink.jsx","theme/selectors.js","views/Home.jsx","theme/actions.js","Routes.jsx","theme/index.js","theme/reducer.js","store.js","App.js","serviceWorker.js","index.js"],"names":["Overlay","children","start","onFinish","timeout","React","useState","isVisible","setIsVisible","parseInt","window","scrollY","top","setTop","useEffect","_timeout","setTimeout","clearTimeout","style","display","position","width","height","left","overflow","zIndex","props","Screen","color","direction","ref","useRef","anime","timeline","add","targets","current","translateX","innerWidth","duration","easing","backgroundColor","delay","stagger","scale","background","innerHeight","leftRef","createRef","rightRef","className","transition","justifyContent","alignItems","StarCutout","id","data-name","viewBox","bottom","right","d","fill","Shape","preserveAspectRatio","xmlns","TransitionLink","overlay","to","setStart","HorizontalWipeOverlay","ScaleWipeOverlay","SplitHorizontalWipeOverlay","SplitVerticalWipeOverlay","StarWipeOverlay","VerticalWipeOverlay","getOverlay","cursor","open","location","assign","href","onClick","e","preventDefault","getState","state","themeReducer","isDarkTheme","getPrimaryColor","primaryColor","Home","dispatch","useDispatch","useSelector","Typography","variant","alt","src","Box","m","AppLink","onChangeComplete","type","setPrimaryColor","hex","Grid","container","justify","spacing","item","hash","reload","Routes","path","component","withBounceWipe","generateTheme","createMuiTheme","palette","primary","colors","orange","appBar","drawer","green","lightGreen","blue","purple","lime","red","lightBlue","blueGrey","main","brown","initialState","localStorage","getItem","rootReducer","combineReducers","action","setItem","createStore","applyMiddleware","thunk","ConnectedApp","darkTheme","ThemeProvider","theme","CssBaseline","App","store","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wbAEO,SAASA,EAAT,GAAwD,IAAtCC,EAAqC,EAArCA,SAAUC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,SAAUC,EAAU,EAAVA,QAAU,EAC1BC,IAAMC,UAAS,GADW,mBACrDC,EADqD,KAC1CC,EAD0C,OAEtCH,IAAMC,SAASG,SAASC,OAAOC,QAAS,KAFF,mBAErDC,EAFqD,KAEhDC,EAFgD,KAkB5D,OAfAR,IAAMS,WAAU,WACd,GAAKZ,EAAL,CACA,IAAIa,EAAWC,YAAW,WACpBb,GACFA,IAEFK,GAAa,KACZJ,GAAoB,KACvB,OAAO,WACLa,aAAaF,OAEd,CAACb,EAAOC,EAAUC,IACrBC,IAAMS,WAAU,WACdD,EAAOJ,SAASC,OAAOC,QAAS,OAC/B,IAED,yBAAKO,MAAO,CACVC,QAASZ,EAAY,QAAU,OAC/Ba,SAAU,WACVC,MAAO,OACPC,OAAQ,OACRV,IAAKA,EACLW,KAAM,EACNC,SAAU,SACVC,OAAQ,MAEPxB,GC3BA,SAASD,EAAQ0B,GACtB,OACE,kBAAC,EAAgBA,EACf,yBAAKR,MAAO,CAACC,QAAQ,OAAQE,MAAO,OAAQC,OAAQ,SAClD,kBAACK,EAAD,CAAQC,MAAOF,EAAME,MAAOC,UAAWH,EAAMG,cAKrD,SAASF,EAAOD,GAAQ,IACfE,EAASF,EAATE,MACHE,EAAMzB,IAAM0B,OAAO,MAYvB,OAXA1B,IAAMS,WAAU,WACMkB,QAAMC,WAEvBC,IAAI,CACHC,QAAQL,EAAIM,QACZC,WAAYX,EAAMG,UAAN,YAAuBnB,OAAO4B,YAA9B,UAAgD5B,OAAO4B,WAAvD,MACZC,SAAU,IACVC,OAAQ,oBAGX,CAACV,EAAKJ,IAEP,yBACEI,IAAKA,EACLZ,MAAO,CACLG,MAAO,OACPC,OAAQ,OACRmB,gBAAiBb,GAAgB,aC7BlC,SAAS5B,EAAQ0B,GAAQ,IACvBE,EAASF,EAATE,MACP,OACE,kBAAC,EAAgBF,EACf,yBAAKR,MAAO,CAACC,QAAQ,OAAQE,MAAO,OAAQC,OAAQ,SAClD,kBAAC,IAAD,CAAOoB,MAAOV,QAAMW,QAAQ,KACrBJ,SAAU,IACVK,MAAO,CAAC,EAAG,IAEhB,yBAAK1B,MAAO,CACV2B,WAAYjB,GAAgB,UAC5BP,MAAOX,OAAO4B,WACdhB,OAAQZ,OAAOoC,kB,OCZpB,SAAS9C,EAAQ0B,GAAQ,IACvBE,EAASF,EAATE,MACDmB,EAAU1C,IAAM2C,UAAU,MAC1BC,EAAW5C,IAAM2C,UAAU,MAajC,OAZA3C,IAAMS,WAAU,WACViC,GAA2C,SAAhCA,EAAQX,QAAQlB,MAAMG,OACnCL,YAAW,WACT+B,EAAQX,QAAQlB,MAAMG,MAAQ,OAC7B,GAED4B,GAA6C,SAAjCA,EAASb,QAAQlB,MAAMG,OACrCL,YAAW,WACTiC,EAASb,QAAQlB,MAAMG,MAAQ,OAC9B,KAEJ,CAAC0B,EAASE,IAEX,kBAAC,EAAgBvB,EACf,yBAAKR,MAAO,CACVE,SAAU,WACVC,MAAO,MACPC,OAAQ,OACRV,IAAK,IAEL,yBACEkB,IAAKiB,EACLG,UAAU,mBACVhC,MAAO,CACLI,OAAO,OACPD,MAAM,OACNwB,WAAYjB,GAAgB,UAC5BuB,WAAY,0BAIlB,yBAAKjC,MAAO,CACVK,KAAM,MACNH,SAAU,WACVC,MAAO,MACPT,IAAK,EACLU,OAAQ,SAER,yBAAKJ,MAAO,CACVG,MAAO,OACPF,QAAS,OACTG,OAAQ,OACR8B,eAAgB,aAEhB,yBACEtB,IAAKmB,EACLC,UAAU,mBACVhC,MAAO,CACLI,OAAO,OACPuB,WAAYjB,GAAgB,UAC5BP,MAAM,aCvDb,SAASrB,EAAQ0B,GAAQ,IACvBE,EAASF,EAATE,MACP,OACE,kBAAC,EAAgBF,EACf,yBAAKR,MAAO,CACVE,SAAU,WACVC,MAAO,OACPC,OAAQ,QAER,yBACE4B,UAAU,iBACVhC,MAAO,CACLI,OAAO,OACPD,MAAM,OACNwB,WAAYjB,GAAgB,cAIlC,yBAAKV,MAAO,CACVN,IAAK,MACLQ,SAAU,WACVC,MAAO,OACPC,OAAQ,QAER,yBAAKJ,MAAO,CACVG,MAAO,OACPF,QAAS,OACTG,OAAQ,OACR+B,WAAY,aAEZ,yBACEH,UAAU,iBACVhC,MAAO,CACLI,OAAO,OACPuB,WAAYjB,GAAgB,UAC5BP,MAAM,aClCb,SAASrB,EAAQ0B,GACtB,OACE,kBAAC,EAAgBA,EACf,yBAAKR,MAAO,CAACC,QAAQ,OAAQE,MAAO,OAAQC,OAAQ,SAClD,kBAACgC,EAAD,CAAY1B,MAAOF,EAAME,UAKjC,SAAS0B,EAAT,GAA8B,IAAT1B,EAAQ,EAARA,MAKfE,EAAMzB,IAAM0B,OAAO,MAWvB,OAVA1B,IAAMS,WAAU,WACMkB,QAAMC,WAEvBC,IAAI,CACHC,QAAQL,EAAIM,QACZQ,MAAO,CAAC,EAAG,IACXL,SAAU,IACVC,OAAQ,kBAEX,CAACV,IAEF,yBACEA,IAAKA,EACLT,MAAM,OACNC,OAAO,OACPiC,GAAG,uCACHC,YAAU,cACVC,QAAQ,eACRvC,MAvBQ,CACVE,SAAS,QAASR,IAAI,EAAG8C,OAAO,EAAGnC,KAAK,EAAGoC,MAAM,EACjDnC,SAAU,WAuBR,0BACAoC,EAAE,4IACFC,KAAMjC,GAAgB,SAEtB,0BACAiC,KAAMjC,GAAgB,UACrBgC,EAAE,wX,OCzCF,SAAS5D,EAAT,GAA4C,IAA1B4B,EAAyB,EAAzBA,MAAO1B,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,SACrC,OACE,kBAAC,EAAD,CAAaD,MAAOA,EAAOC,SAAUA,GACnC,yBACEe,MAAO,CACLG,MAAO,OACPwB,WAAYjB,GAAgB,WAE9BsB,UAAU,aAEZ,yBACEhC,MAAO,CACL2B,WAAYjB,GAAgB,UAC5BP,MAAO,OACP8B,WAAY,eAGhB,kBAACW,EAAD,CAAOlC,MAAOA,KAmBpB,SAASkC,EAAT,GAAyB,IAARlC,EAAO,EAAPA,MACf,OACE,yBACEsB,UAAU,QACVa,oBAAoB,OAAON,QAAQ,eACnCO,MAAM,8BAEN,0BAAMH,KAAMjC,EAAOgC,EAAE,uLCnBpB,SAASK,EAAT,GAAmE,IAA1Cf,EAAyC,EAAzCA,UAAWjD,EAA8B,EAA9BA,SAAUiE,EAAoB,EAApBA,QAAShD,EAAW,EAAXA,MAAOiD,EAAI,EAAJA,GAAI,EAC7C9D,IAAMC,UAAS,GAD8B,mBAChEJ,EADgE,KACzDkE,EADyD,KAEjEpE,EAAUkE,EArBlB,SAAoBA,GAClB,OAAOA,GACL,IAAK,aACH,OAAOG,EACT,IAAK,QACH,OAAOC,EACT,IAAK,mBACH,OAAOC,EACT,IAAK,iBACH,OAAOC,EACT,IAAK,OACH,OAAOC,EACT,IAAK,WAEL,QACE,OAAOC,GAMeC,CAAWT,GAAWQ,EAChD,OACE,yBAAKxD,MAAO,CAAC0D,OAAO,YACjB1E,GACC,kBAACF,EAAD,CAAS4B,MAAOV,EAAMU,MAAQV,EAAMU,MAAQ,GAAI1B,MAAOA,EAAOC,SAAU,WACzDO,OAAOmE,KAAKV,EAAI,WAE3BzD,OAAOoE,SAASC,OAAOZ,GAEzBC,GAAS,MAGb,uBAAGlB,UAAWA,EAAWhC,MAAOA,EAAO8D,KAAMb,EAAIc,QAAS,SAACC,GACzDd,GAAS,GACTc,EAAEC,mBAEDlF,I,aC9CT,SAASmF,EAASC,GAChB,OAAOA,EAAMC,aAER,SAASC,EAAYF,GAC1B,OAAOD,EAASC,GAAOE,YAElB,SAASC,EAAgBH,GAC9B,OAAOD,EAASC,GAAOI,a,OCKlB,SAASC,IACd,IAAMC,EAAWC,cACXH,EAAeI,YAAYL,GACjC,OACE,yBAAKtC,UAAU,cACb,kBAAC4C,EAAA,EAAD,CAAYC,QAAQ,MAClB,yBACEC,IAAI,kBACJ9C,UAAU,YACV7B,MAAM,OACN4E,IAAI,iCALR,cAQE,yBACED,IAAI,mBACJ9C,UAAU,kBACV7B,MAAM,OACN4E,IAAI,kCAGR,kBAACH,EAAA,EAAD,CAAYC,QAAQ,MAApB,UACA,kBAACG,EAAA,EAAD,CAAKC,EAAG,GACN,kBAAClC,EAAD,CACE/C,MAAO,CAACU,MAAO6D,GACftB,GAAG,0CAFL,2CAKF,kBAAC2B,EAAA,EAAD,CAAYC,QAAQ,MAApB,WACA,kBAACD,EAAA,EAAD,CAAYC,QAAQ,MAApB,qBACA,kBAACD,EAAA,EAAD,CAAYC,QAAQ,MAApB,YACA,kBAACK,EAAD,CAASjC,GAAG,cAAZ,cACA,kBAACiC,EAAD,CAASjC,GAAG,aAAZ,aACA,kBAACiC,EAAD,CAASjC,GAAG,YAAZ,YACA,kBAACiC,EAAD,CAASjC,GAAG,YAAZ,YACA,kBAACiC,EAAD,CAASjC,GAAG,kBAAZ,kBACA,kBAACiC,EAAD,CAASjC,GAAG,YAAZ,YAIA,kBAACiC,EAAD,CAASjC,GAAG,cAAZ,cACA,kBAACiC,EAAD,CAASjC,GAAG,sBAAZ,sBACA,kBAACiC,EAAD,CAASjC,GAAG,oBAAZ,oBACA,kBAACiC,EAAD,CAASjC,GAAG,UAAZ,UACA,kBAAC2B,EAAA,EAAD,CAAYC,QAAQ,MAApB,iBACA,kBAACG,EAAA,EAAD,CAAKC,EAAG,GACN,kBAAC,IAAD,CAAcE,iBAAkB,SAAAzE,GAC9B+D,ECpDH,SAAyB/D,GAC9B,MAAO,CACL0E,KAAM,oBACN1E,SDiDe2E,CAAgB3E,EAAM4E,UAOnC,kBAACN,EAAA,EAAD,CAAKC,EAAG,GACN,kBAACM,EAAA,EAAD,CAAMC,WAAS,EAACrD,WAAW,WAAWsD,QAAQ,SAASC,QAAS,GAC9D,kBAACH,EAAA,EAAD,CAAMI,MAAI,GACR,kBAACf,EAAA,EAAD,6BAEF,kBAACW,EAAA,EAAD,CAAMI,MAAI,GACR,kBAAC5C,EAAD,CACEC,QAAQ,QACRhD,MAAO,CAACU,MAAO6D,GACftB,GAAG,0BAHL,mBAYZ,SAASiC,EAAT,GAAwB,IAANjC,EAAK,EAALA,GACVsB,EAAeI,YAAYL,GACjC,OACE,kBAACU,EAAA,EAAD,CAAKC,EAAG,GACN,kBAAC,IAAD,CACEjF,MAAO,CAACU,MAAO6D,GACfR,QAAS,WACPvE,OAAOoE,SAASE,KAAK,gBAAgBb,EACjCzD,OAAOoE,SAASgC,OAAU,IAAM3C,GAClCzD,OAAOoE,SAASiC,UAGpB5C,GAAIA,GACHA,IE3EF,SAAS6C,IACd,IAAMvB,EAAeI,YAAYL,GACjC,OACE,kBAAC,IAAD,KACI,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOyB,KAAK,aACV,kBAAC,eAAD,CAAcrF,MAAO6D,GACnB,kBAAC,EAAD,QAGJ,kBAAC,IAAD,CAAOwB,KAAK,aACR,kBAAC,eAAD,CAAcrF,MAAO6D,GACnB,kBAAC,EAAD,QAGN,kBAAC,IAAD,CAAOwB,KAAK,mBACR,kBAAC,oBAAD,CAAmBrF,MAAO6D,GACxB,kBAAC,EAAD,QAGN,kBAAC,IAAD,CAAOwB,KAAK,eACR,kBAAC,iBAAD,CAAgBrF,MAAO6D,GACrB,kBAAC,EAAD,QAGN,kBAAC,IAAD,CAAOwB,KAAK,uBACV,kBAAC,iBAAD,CAAgBrF,MAAO6D,EAAc5D,UAAU,WAC7C,kBAAC,EAAD,QAGJ,kBAAC,IAAD,CAAOoF,KAAK,qBACR,kBAAC,sBAAD,CAAqBrF,MAAO6D,GAC1B,kBAAC,EAAD,QAGN,kBAAC,IAAD,CAAOwB,KAAK,aACR,kBAAC,YAAD,CAAWrF,MAAO6D,GAChB,kBAAC,EAAD,QAGN,kBAAC,IAAD,CAAOwB,KAAK,cACR,kBAAC,WAAD,CAAUrF,MAAO6D,GACf,kBAAC,EAAD,QAGN,kBAAC,IAAD,CAAOyB,UAAWC,yBAAezB,EAAMD,GAAewB,KAAK,YAC3D,kBAAC,IAAD,CAAOA,KAAK,eACV,kBAAC,YAAD,CAAWrF,MAAO6D,GAChB,kBAAC,EAAD,QAGJ,kBAAC,IAAD,CAAOwB,KAAK,KACV,kBAAC,EAAD,S,sCCzCCG,GAnBYC,YAAe,CACtCC,QAAS,CACPC,QAASC,IAAOC,OAEhBnB,KAAM,UAGWe,YAAe,CAClC5F,OAAQ,CACNiG,OAAQ,KACRC,OAAQ,MAEVL,QAAS,CACPC,QAASC,IAAOC,OAChBnB,KAAM,WAKmB,SAACb,EAAcF,GAC1C,IAAI3D,EAAQ4F,IAAOC,OAsBnB,MArBqB,UAAjBhC,EACF7D,EAAQ4F,IAAOI,MACW,gBAAjBnC,EACT7D,EAAQ4F,IAAOK,WACW,SAAjBpC,EACT7D,EAAQ4F,IAAOM,KACW,WAAjBrC,EACT7D,EAAQ4F,IAAOO,OACW,WAAjBtC,EACT7D,EAAQ4F,IAAOC,OACW,SAAjBhC,EACT7D,EAAQ4F,IAAOQ,KACW,QAAjBvC,EACT7D,EAAQ4F,IAAOS,IACW,eAAjBxC,EACT7D,EAAQ4F,IAAOU,UACW,cAAjBzC,EACT7D,EAAQ4F,IAAOW,SACW,gBAAjB1C,IACT7D,EAAQ,CAACwG,KAAKC,IAAM,OAEfhB,YAAe,CACpB5F,OAAQ,CACNiG,OAAQ,KACRC,OAAQ,MAEVL,QAAS,CACPC,QAAS3F,EAET0E,KAAMf,EAAc,OAAS,a,yBC/D7B+C,EAAe,CACnB/C,YAAagD,aAAaC,QAAQ,iBAAkB,EACpD/C,aAAc8C,aAAaC,QAAQ,iBAAmB,UCExD,IAAMC,EAAcC,YAAgB,CAClCpD,aDAK,WAAkD,IAA5BD,EAA2B,uDAArBiD,EAAcK,EAAO,uCACtD,OAAQA,EAAOrC,MACb,IAAK,oBAEH,OADAiC,aAAaK,QAAQ,eAAgBvD,EAAME,aACpC,eACFF,EADL,CAEEE,aAAcF,EAAME,cAExB,IAAK,oBAEH,OADAgD,aAAaK,QAAQ,eAAgBD,EAAO/G,OACrC,eACFyD,EADL,CAEEI,aAAckD,EAAO/G,QAEzB,QACE,OAAOyD,MCZEwD,cAAYJ,EAAaK,YAAgBC,MCExD,SAASC,IACP,IAAMvD,EAAeI,YAAYL,GAC3ByD,EAAYpD,YAAYN,GAC9B,OACE,kBAAC2D,EAAA,EAAD,CACEC,MAAO/B,EAAc3B,EAAcwD,IAEnC,kBAACG,EAAA,EAAD,MACA,kBAACpC,EAAD,OAaSqC,MARf,WACE,OACE,kBAAC,IAAD,CAAUC,MAAOA,GACf,kBAACN,EAAD,QCdcO,QACW,cAA7B7I,OAAOoE,SAAS0E,UAEe,UAA7B9I,OAAOoE,SAAS0E,UAEhB9I,OAAOoE,SAAS0E,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.a1e65353.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport function Overlay({children, start, onFinish, timeout}) {\r\n  const [isVisible, setIsVisible] = React.useState(true)\r\n  const [top, setTop] = React.useState(parseInt(window.scrollY, 10))\r\n  React.useEffect(() => {\r\n    if (!start) return\r\n    let _timeout = setTimeout(()=>{\r\n      if (onFinish) {\r\n        onFinish()\r\n      }\r\n      setIsVisible(false)\r\n    }, timeout ? timeout : 900)\r\n    return () => {\r\n      clearTimeout(_timeout)\r\n    };\r\n  }, [start, onFinish, timeout])\r\n  React.useEffect(() => {\r\n    setTop(parseInt(window.scrollY, 10))\r\n  }, [])\r\n  return (\r\n    <div style={{\r\n      display: isVisible ? \"block\" : \"none\",\r\n      position: \"absolute\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      top: top,\r\n      left: 0,\r\n      overflow: \"hidden\",\r\n      zIndex: 100,\r\n    }}>\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport {anime} from \"react-anime\";\r\nimport {Overlay as BaseOverlay} from './Overlay'\r\n\r\nexport function Overlay(props) {\r\n  return (\r\n    <BaseOverlay {...props}>\r\n      <div style={{display:\"flex\", width: \"100%\", height: \"100%\"}}>\r\n        <Screen color={props.color} direction={props.direction}/>\r\n      </div>\r\n    </BaseOverlay>\r\n  )\r\n}\r\nfunction Screen(props) {\r\n  const {color} = props\r\n  let ref = React.useRef(null)\r\n  React.useEffect(()=>{\r\n    var basicTimeline = anime.timeline();\r\n    basicTimeline\r\n      .add({\r\n        targets:ref.current,\r\n        translateX: props.direction ? `-=${window.innerWidth}` : `${window.innerWidth}px`,\r\n        duration: 1000,\r\n        easing: \"easeInOutSine\",\r\n      })\r\n\r\n  }, [ref, props])\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      style={{\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        backgroundColor: color ? color : \"#61dafb\",\r\n      }}\r\n    ></div>\r\n  )\r\n}\r\nexport function HorizontalWipe({color, children, direction}){\r\n  return (\r\n    <div>\r\n      <Overlay color={color} start={true} direction={direction}/>\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const withHorizontalWipe = (Component, color) => ({...props}) => {\r\n  return (\r\n    <HorizontalWipe color={color}>\r\n      <Component {...props} />\r\n    </HorizontalWipe>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport Anime, {anime} from \"react-anime\";\r\nimport {Overlay as BaseOverlay} from './Overlay'\r\n\r\nexport function Overlay(props) {\r\n  const {color} = props\r\n  return (\r\n    <BaseOverlay {...props}>\r\n      <div style={{display:\"flex\", width: \"100%\", height: \"100%\"}}>\r\n        <Anime delay={anime.stagger(100)}\r\n               duration={5000}\r\n               scale={[0, 1]}\r\n        >\r\n          <div style={{\r\n            background: color ? color : \"#0b556a\",\r\n            width: window.innerWidth,\r\n            height: window.innerHeight\r\n          }}/>\r\n        </Anime>\r\n      </div>\r\n    </BaseOverlay>\r\n  )\r\n}\r\nexport function ScaleWipe({color, children}){\r\n  return (\r\n    <div>\r\n      <Overlay color={color} start={true}/>\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const withScaleWipe = Component => ({...props}) => {\r\n  return (\r\n    <ScaleWipe>\r\n      <Component {...props} />\r\n    </ScaleWipe>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport {Overlay as BaseOverlay} from './Overlay'\r\nimport './SplitHorizontalWipe.css'\r\n\r\nexport function Overlay(props) {\r\n  const {color} = props\r\n  const leftRef = React.createRef(null)\r\n  const rightRef = React.createRef(null)\r\n  React.useEffect(()=>{\r\n    if (leftRef && leftRef.current.style.width === \"100%\") {\r\n      setTimeout(function () {\r\n        leftRef.current.style.width = \"0%\";\r\n      }, 5);\r\n    }\r\n    if (rightRef && rightRef.current.style.width === \"100%\") {\r\n      setTimeout(function () {\r\n        rightRef.current.style.width = \"0%\";\r\n      }, 5);\r\n    }\r\n  }, [leftRef, rightRef])\r\n  return (\r\n    <BaseOverlay {...props}>\r\n      <div style={{\r\n        position: \"absolute\",\r\n        width: \"50%\",\r\n        height: \"100%\",\r\n        top: 0,\r\n      }}>\r\n        <div\r\n          ref={leftRef}\r\n          className=\"split-horizontal\"\r\n          style={{\r\n            height: `100%`,\r\n            width: `100%`,\r\n            background: color ? color : '#0b556a',\r\n            transition: \"height 1s, width 1s\",\r\n          }}\r\n        />\r\n      </div>\r\n      <div style={{\r\n        left: \"50%\",\r\n        position: \"absolute\",\r\n        width: \"50%\",\r\n        top: 0,\r\n        height: \"100%\",\r\n      }}>\r\n        <div style={{\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          height: \"100%\",\r\n          justifyContent: \"flex-end\"\r\n        }}>\r\n          <div\r\n            ref={rightRef}\r\n            className=\"split-horizontal\"\r\n            style={{\r\n              height: `100%`,\r\n              background: color ? color : '#0b556a',\r\n              width: `100%`,\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </BaseOverlay>\r\n  )\r\n}\r\nexport function SplitHorizontalWipe({color, children}){\r\n  return (\r\n    <div>\r\n      <Overlay color={color} start={true}/>\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const withSplitHorizontalWipe = (Component, color) => ({...props}) => {\r\n  return (\r\n    <SplitHorizontalWipe color={color}>\r\n      <Component {...props} />\r\n    </SplitHorizontalWipe>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport {Overlay as BaseOverlay} from './Overlay'\r\n\r\nexport function Overlay(props) {\r\n  const {color} = props\r\n  return (\r\n    <BaseOverlay {...props}>\r\n      <div style={{\r\n        position: \"absolute\",\r\n        width: \"100%\",\r\n        height: \"50%\",\r\n      }}>\r\n        <div\r\n          className=\"split-vertical\"\r\n          style={{\r\n            height: `100%`,\r\n            width: `100%`,\r\n            background: color ? color : '#0b556a',\r\n          }}\r\n        />\r\n      </div>\r\n      <div style={{\r\n        top: \"50%\",\r\n        position: \"absolute\",\r\n        width: \"100%\",\r\n        height: \"50%\",\r\n      }}>\r\n        <div style={{\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          height: \"100%\",\r\n          alignItems: \"flex-end\"\r\n        }}>\r\n          <div\r\n            className=\"split-vertical\"\r\n            style={{\r\n              height: `100%`,\r\n              background: color ? color : '#0b556a',\r\n              width: `100%`,\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </BaseOverlay>\r\n  )\r\n}\r\nexport function SplitVerticalWipe({children, color}){\r\n  return (\r\n    <div>\r\n      <Overlay color={color} start={true}/>\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const withSplitVerticalWipe = (Component, color) => ({...props}) => {\r\n  return (\r\n    <SplitVerticalWipe color={color}>\r\n      <Component {...props} />\r\n    </SplitVerticalWipe>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport {anime} from \"react-anime\";\r\nimport {Overlay as BaseOverlay} from './Overlay'\r\n\r\nexport function Overlay(props) {\r\n  return (\r\n    <BaseOverlay {...props}>\r\n      <div style={{display:\"flex\", width: \"100%\", height: \"100%\"}}>\r\n        <StarCutout color={props.color} />\r\n      </div>\r\n    </BaseOverlay>\r\n  )\r\n}\r\nfunction StarCutout({color}) {\r\n  let style = {\r\n    position:\"fixed\", top:0, bottom:0, left:0, right:0,\r\n    overflow: \"hidden\",\r\n  };\r\n  let ref = React.useRef(null)\r\n  React.useEffect(()=>{\r\n    var basicTimeline = anime.timeline();\r\n    basicTimeline\r\n      .add({\r\n        targets:ref.current,\r\n        scale: [1, 55],\r\n        duration: 3000,\r\n        easing: \"easeOutSine\"\r\n      })\r\n  }, [ref])\r\n  return (\r\n    <svg\r\n      ref={ref}\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      id=\"e350d5ca-b3f4-4409-80c7-c3f48cc0f93e\"\r\n      data-name=\"Star Cutout\"\r\n      viewBox=\"0 0 1024 768\"\r\n      style={style}\r\n      >\r\n      <path\r\n      d=\"M.5,767.5V.5h1023v767ZM540.55,436.78l-7-48.89,36.31-33.47L521.21,346,500.6,301.08l-23.08,43.66-49,5.74,34.39,35.44-9.7,48.42,44.33-21.75Z\"\r\n      fill={color ? color : \"#fff\"}\r\n      />\r\n      <path\r\n      fill={color ? color : \"#61dafb\"}\r\n       d=\"M1023,1V767H1V1H1023M477.2,344.28l-47.78,5.58-2,.24,1.41,1.45,33.5,34.53-9.45,47.17-.4,2,1.82-.9,43.19-21.19,41.94,23.57,1.76,1-.28-2-6.81-47.63,35.37-32.6L571,354.1l-2-.34-47.4-8.25L501.48,301.8l-.85-1.85-.94,1.8L477.2,344.28M1024,0H0V768H1024V0ZM453.85,433.45l9.55-47.69-33.87-34.9,48.31-5.65,22.73-43,20.3,44.2,47.91,8.33L533,387.7l6.88,48.15L497.51,412l-43.66,21.43Z\"/></svg>\r\n  )\r\n}\r\nexport function StarWipe({color, children}){\r\n  return (\r\n    <div>\r\n      <Overlay color={color} start={true} />\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const withStarWipe = (Component, color) => ({...props}) => {\r\n  return (\r\n    <StarWipe color={color}>\r\n      <Component {...props} />\r\n    </StarWipe>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport './VerticalWipe.css'\r\nimport {Overlay as BaseOverlay} from './Overlay'\r\n\r\nexport function Overlay({color, start, onFinish}) {\r\n  return (\r\n    <BaseOverlay start={start} onFinish={onFinish}>\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          background: color ? color : '#0b556a',\r\n        }}\r\n        className=\"vertical\"\r\n      />\r\n      <div\r\n        style={{\r\n          background: color ? color : '#0b556a',\r\n          width: \"100%\",\r\n          transition: \"height 1s\",\r\n        }}\r\n      />\r\n      <Shape color={color} />\r\n    </BaseOverlay>\r\n  )\r\n}\r\n\r\nexport function VerticalWipe({color, children}){\r\n  const [start, setStart] = React.useState(true)\r\n  return (\r\n    <div>\r\n      <Overlay\r\n        color={color}\r\n        start={start}\r\n        onFinish={()=>setStart(false)}\r\n      />\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Shape ({color}){\r\n  return (\r\n    <svg\r\n      className=\"shape\"\r\n      preserveAspectRatio=\"none\" viewBox=\"0 0 1440 100\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n      <path fill={color} d=\"M -44,-50 C -52.71,28.52 15.86,8.186 184,14.69 383.3,22.39 462.5,12.58 638,14 835.5,15.6 987,6.4 1194,13.86 1661,30.68 1652,-36.74 1582,-140.1 1512,-243.5 15.88,-589.5 -44,-50 Z\">\r\n      </path>\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport const withVerticalWipe = (Component, color) => ({...props}) => {\r\n  return (\r\n    <VerticalWipe color={color}>\r\n      <Component {...props} />\r\n    </VerticalWipe>\r\n  )\r\n}\r\n","import React from \"react\"\nimport {Overlay as HorizontalWipeOverlay} from './HorizontalWipe'\nimport {Overlay as VerticalWipeOverlay} from './VerticalWipe'\nimport {Overlay as StarWipeOverlay} from './StarWipe'\nimport {Overlay as SplitVerticalWipeOverlay} from './SplitVerticalWipe'\nimport {Overlay as SplitHorizontalWipeOverlay} from './SplitHorizontalWipe'\nimport {Overlay as ScaleWipeOverlay} from './ScaleWipe'\n\n\nfunction getOverlay(overlay) {\n  switch(overlay) {\n    case \"horizontal\":\n      return HorizontalWipeOverlay\n    case \"scale\":\n      return ScaleWipeOverlay\n    case \"split-horizontal\":\n      return SplitHorizontalWipeOverlay\n    case \"split-vertical\":\n      return SplitVerticalWipeOverlay\n    case \"star\":\n      return StarWipeOverlay\n    case \"vertical\":\n      return VerticalWipeOverlay\n    default:\n      return VerticalWipeOverlay\n  }\n}\n\nexport function TransitionLink({className, children, overlay, style, to}){\n  const [start, setStart] = React.useState(false)\n  const Overlay = overlay ? getOverlay(overlay) : VerticalWipeOverlay\n  return (\n    <div style={{cursor:'pointer'}}>\n      {start && (\n        <Overlay color={style.color ? style.color : ''} start={start} onFinish={()=>{\n          const open = window.open(to, '_blank');\n          if (!open) {\n            window.location.assign(to)\n          }\n          setStart(false)\n        }} />\n      )}\n      <a className={className} style={style} href={to} onClick={(e)=>{\n        setStart(true)\n        e.preventDefault()\n      }}>\n        {children}\n      </a>\n    </div>\n  )\n}\n","function getState(state){\n  return state.themeReducer;\n}\nexport function isDarkTheme(state){\n  return getState(state).isDarkTheme;\n}\nexport function getPrimaryColor(state){\n  return getState(state).primaryColor;\n}\n","import React from 'react'\r\nimport Box from '@material-ui/core/Box'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport {TransitionLink} from '../lib/src'\r\nimport {Link} from \"react-router-dom\";\r\nimport {CirclePicker} from 'react-color'\r\nimport {setPrimaryColor} from '../theme/actions'\r\nimport {getPrimaryColor} from \"../theme/selectors\";\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport './Home.css'\r\n\r\nexport function Home() {\r\n  const dispatch = useDispatch()\r\n  const primaryColor = useSelector(getPrimaryColor)\r\n  return (\r\n    <div className=\"App-header\">\r\n      <Typography variant=\"h1\">\r\n        <img\r\n          alt=\"left-title-icon\"\r\n          className=\"logo-icon\"\r\n          width=\"75px\"\r\n          src=\"/react-wipes/cinema_icon.svg\"\r\n        />\r\n        React Wipes\r\n        <img\r\n          alt=\"right-title-icon\"\r\n          className=\"right-logo-icon\"\r\n          width=\"75px\"\r\n          src=\"/react-wipes/cinema_icon.svg\"\r\n        />\r\n        </Typography>\r\n      <Typography variant=\"h2\">Github</Typography>\r\n      <Box m={1}>\r\n        <TransitionLink\r\n          style={{color: primaryColor}}\r\n          to=\"https://github.com/rhigdon/react-wipes\"\r\n        >https://github.com/rhigdon/react-wipes</TransitionLink>\r\n      </Box>\r\n      <Typography variant=\"h2\">Install</Typography>\r\n      <Typography variant=\"h3\">npm i react-wipes</Typography>\r\n      <Typography variant=\"h2\">Examples</Typography>\r\n      <AppLink to=\"clock-wipe\">Clock Wipe</AppLink>\r\n      <AppLink to=\"star-wipe\">Star Wipe</AppLink>\r\n      <AppLink to=\"scale-up\">Scale Up</AppLink>\r\n      <AppLink to=\"vertical\">Vertical</AppLink>\r\n      <AppLink to=\"split-vertical\">Split Vertical</AppLink>\r\n      <AppLink to=\"diagonal\">Diagonal</AppLink>\r\n      {/**\r\n      <Link className=\"App-link\" to=\"/diagonal\">Split Diagonal</Link>\r\n      */}\r\n      <AppLink to=\"horizontal\">Horizontal</AppLink>\r\n      <AppLink to=\"horizontal-reverse\">Horizontal Reverse</AppLink>\r\n      <AppLink to=\"split-horizontal\">Split Horizontal</AppLink>\r\n      <AppLink to=\"bounce\">Bounce</AppLink>\r\n      <Typography variant=\"h2\">Color Support</Typography>\r\n      <Box m={3}>\r\n        <CirclePicker onChangeComplete={color => {\r\n          dispatch(setPrimaryColor(color.hex))\r\n        }}/>\r\n      </Box>\r\n      {/**\r\n        <Link className=\"App-link\" to=\"/next\">Matrix</Link>\r\n        <Link className=\"App-link\" to=\"/next\">Heart</Link>\r\n      */}\r\n      <Box m={5}>\r\n        <Grid container alignItems=\"baseline\" justify=\"center\" spacing={1}>\r\n          <Grid item>\r\n            <Typography>Made with ❤ by</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <TransitionLink\r\n              overlay=\"scale\"\r\n              style={{color: primaryColor}}\r\n              to=\"https://ryanhigdon.com\"\r\n            >Ryan Higdon</TransitionLink>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction AppLink({to}) {\r\n  const primaryColor = useSelector(getPrimaryColor)\r\n  return (\r\n    <Box m={1}>\r\n      <Link\r\n        style={{color: primaryColor}}\r\n        onClick={()=>{\r\n          window.location.href=\"/react-wipes#\"+to\r\n          if (window.location.hash === (\"#\" + to)) {\r\n            window.location.reload()\r\n          }\r\n        }}\r\n        to={to}>\r\n        {to}\r\n      </Link>\r\n    </Box>\r\n  )\r\n}\r\n","export function toggleDarkTheme(){\n  return {\n    type: 'TOGGLE_DARK_THEME',\n  }\n}\n\nexport function setPrimaryColor(color){\n  return {\n    type: 'SET_PRIMARY_COLOR',\n    color,\n  }\n}\n","import React from 'react'\r\nimport {\r\n  ClockWipe,\r\n  DiagonalWipe,\r\n  HorizontalWipe,\r\n  ScaleWipe,\r\n  SplitHorizontalWipe,\r\n  SplitVerticalWipe,\r\n  StarWipe,\r\n  VerticalWipe,\r\n  withBounceWipe,\r\n} from 'react-wipes/dist'\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport {Home} from './views/Home'\r\nimport {useSelector} from 'react-redux'\r\nimport {getPrimaryColor} from './theme/selectors'\r\n\r\nexport function Routes() {\r\n  const primaryColor = useSelector(getPrimaryColor)\r\n  return (\r\n    <Router>\r\n        <Switch>\r\n          <Route path=\"/diagonal\">\r\n            <DiagonalWipe color={primaryColor}>\r\n              <Home />\r\n            </DiagonalWipe>\r\n          </Route>\r\n          <Route path=\"/vertical\">\r\n              <VerticalWipe color={primaryColor}>\r\n                <Home />\r\n              </VerticalWipe>\r\n          </Route>\r\n          <Route path=\"/split-vertical\">\r\n              <SplitVerticalWipe color={primaryColor}>\r\n                <Home />\r\n              </SplitVerticalWipe>\r\n          </Route>\r\n          <Route path=\"/horizontal\">\r\n              <HorizontalWipe color={primaryColor}>\r\n                <Home />\r\n              </HorizontalWipe>\r\n          </Route>\r\n          <Route path=\"/horizontal-reverse\">\r\n            <HorizontalWipe color={primaryColor} direction='reverse'>\r\n              <Home />\r\n            </HorizontalWipe>\r\n          </Route>\r\n          <Route path=\"/split-horizontal\">\r\n              <SplitHorizontalWipe color={primaryColor}>\r\n                <Home />\r\n              </SplitHorizontalWipe>\r\n          </Route>\r\n          <Route path=\"/scale-up\">\r\n              <ScaleWipe color={primaryColor}>\r\n                <Home />\r\n              </ScaleWipe>\r\n          </Route>\r\n          <Route path=\"/star-wipe\">\r\n              <StarWipe color={primaryColor}>\r\n                <Home />\r\n              </StarWipe>\r\n          </Route>\r\n          <Route component={withBounceWipe(Home, primaryColor)} path=\"/bounce\" />\r\n          <Route path=\"/clock-wipe\">\r\n            <ClockWipe color={primaryColor}>\r\n              <Home />\r\n            </ClockWipe>\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n    </Router>\r\n  )\r\n}\r\n","import { createMuiTheme } from '@material-ui/core';\n// const darkTheme = createMuiTheme({\n//   palette: {\n//     type: 'dark',\n//   },\n// });\n// import purple from '@material-ui/core/colors/purple';\n// import green from '@material-ui/core/colors/green';\n// import orange from '@material-ui/core/colors/orange';\n// import red from '@material-ui/core/colors/red';\nimport { colors } from '@material-ui/core';\nimport brown from '@material-ui/core/colors/brown';\n\nexport const darkTheme = createMuiTheme({\n  palette: {\n    primary: colors.orange,\n    // secondary: green,\n    type: 'dark',\n  },\n});\nexport const theme = createMuiTheme({\n  zIndex: {\n    appBar: 1200,\n    drawer: 1100\n  },\n  palette: {\n    primary: colors.orange,\n    type: 'light',\n  },\n});\n\n\nexport const generateTheme = (primaryColor, isDarkTheme) => {\n  let color = colors.orange\n  if (primaryColor === \"GREEN\"){\n    color = colors.green;\n  } else if (primaryColor === \"LIGHT_GREEN\"){\n    color = colors.lightGreen;\n  } else if (primaryColor === \"BLUE\"){\n    color = colors.blue;\n  } else if (primaryColor === \"PURPLE\"){\n    color = colors.purple;\n  } else if (primaryColor === \"ORANGE\"){\n    color = colors.orange;\n  } else if (primaryColor === \"LIME\") {\n    color = colors.lime;\n  } else if (primaryColor === \"RED\"){\n    color = colors.red;\n  } else if (primaryColor === \"LIGHT_BLUE\"){\n    color = colors.lightBlue;\n  } else if (primaryColor === \"BLUE_GREY\"){\n    color = colors.blueGrey;\n  } else if (primaryColor === \"LIGHT_BROWN\"){\n    color = {main:brown[300]};\n  }\n  return createMuiTheme({\n    zIndex: {\n      appBar: 1200,\n      drawer: 1100\n    },\n    palette: {\n      primary: color,\n      // secondary: green,\n      type: isDarkTheme ? 'dark' : 'light',\n    },\n  })\n}\n","const initialState = {\n  isDarkTheme: localStorage.getItem('isDarkTheme') || false,\n  primaryColor: localStorage.getItem('primaryColor') || \"ORANGE\",\n};\n\nexport function themeReducer(state=initialState, action){\n  switch (action.type) {\n    case \"TOGGLE_DARK_THEME\":\n      localStorage.setItem('isDarkTheme', !state.isDarkTheme);\n      return {\n        ...state,\n        isDarkTheme: !state.isDarkTheme\n      }\n    case \"SET_PRIMARY_COLOR\":\n      localStorage.setItem('primaryColor', action.color);\n      return {\n        ...state,\n        primaryColor: action.color,\n      }\n    default:\n      return state;\n  }\n}\n","import { combineReducers, createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {themeReducer} from './theme/reducer'\r\n\r\nconst rootReducer = combineReducers({\r\n  themeReducer,\r\n})\r\n\r\nexport default createStore(rootReducer, applyMiddleware(thunk));\r\n","import React from 'react';\nimport { Provider, useSelector } from 'react-redux'\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport './App.css';\nimport {Routes} from './Routes'\nimport {generateTheme} from './theme';\nimport store from './store'\nimport {getPrimaryColor, isDarkTheme} from \"./theme/selectors\";\n\nfunction ConnectedApp() {\n  const primaryColor = useSelector(getPrimaryColor)\n  const darkTheme = useSelector(isDarkTheme)\n  return (\n    <ThemeProvider\n      theme={generateTheme(primaryColor, darkTheme)}\n    >\n      <CssBaseline />\n      <Routes />\n    </ThemeProvider>\n  )\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <ConnectedApp />\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}