{"version":3,"sources":["theme/selectors.js","views/Home.jsx","theme/actions.js","Routes.jsx","theme/index.js","theme/reducer.js","store.js","App.js","serviceWorker.js","index.js"],"names":["getState","state","themeReducer","isDarkTheme","getPrimaryColor","primaryColor","Logo","Grid","container","alignItems","Tooltip","title","Box","m","alt","className","width","src","Typography","variant","style","color","to","Install","React","useState","open","setOpen","ClickAwayListener","onClickAway","PopperProps","disablePortal","onClose","disableFocusListener","disableHoverListener","disableTouchListener","direction","spacing","item","fontSize","Home","dispatch","useDispatch","useSelector","trigger","useScrollTrigger","target","window","undefined","Slide","appear","in","AppBar","zIndex","background","justify","AppLink","onChangeComplete","type","setPrimaryColor","hex","overlay","StarWipeOverlay","children","location","useHistory","useLocation","replace","onClick","e","href","pathname","reload","preventDefault","Routes","path","component","withBounceWipe","generateTheme","createMuiTheme","palette","primary","colors","orange","appBar","drawer","green","lightGreen","blue","purple","lime","red","lightBlue","blueGrey","main","brown","initialState","localStorage","getItem","rootReducer","combineReducers","action","setItem","createStore","applyMiddleware","thunk","ConnectedApp","darkTheme","ThemeProvider","theme","CssBaseline","App","store","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.638cf2a7.chunk.js","sourcesContent":["function getState(state){\n  return state.themeReducer;\n}\nexport function isDarkTheme(state){\n  return getState(state).isDarkTheme;\n}\nexport function getPrimaryColor(state){\n  return getState(state).primaryColor;\n}\n","import React from 'react'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Box from '@material-ui/core/Box'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Slide from '@material-ui/core/Slide'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger'\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy'\r\nimport {TransitionLink} from 'react-wipes'\r\nimport {Overlay as StarWipeOverlay} from 'react-wipes/StarWipe'\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {CirclePicker} from 'react-color'\r\nimport {setPrimaryColor} from '../theme/actions'\r\nimport {getPrimaryColor} from \"../theme/selectors\";\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport './Home.css'\r\n\r\nfunction Logo({primaryColor}) {\r\n  return (\r\n    <Grid container alignItems=\"center\">\r\n      <Tooltip title=\"React Wipes are reel fun.\">\r\n        <Box m={1}>\r\n          <img\r\n            alt=\"left-title-icon\"\r\n            className=\"logo-icon\"\r\n            width=\"20px\"\r\n            src=\"/react-wipes/cinema_icon.svg\"\r\n          />\r\n        </Box>\r\n      </Tooltip>\r\n      <Typography variant=\"subtitle1\">\r\n        <Link\r\n          style={{color: primaryColor}}\r\n          to=\"/\"\r\n        >React Wipes</Link>\r\n      </Typography>\r\n      <Tooltip title=\"Use them once, and they'll reel you in.\">\r\n        <Box m={1}>\r\n          <img\r\n            alt=\"right-title-icon\"\r\n            className=\"right-logo-icon\"\r\n            width=\"20px\"\r\n            src=\"/react-wipes/cinema_icon.svg\"\r\n          />\r\n        </Box>\r\n      </Tooltip>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nfunction Install() {\r\n  const INSTALL_TEXT = \"yarn add react-wipes\"\r\n  const [open, setOpen] = React.useState(false)\r\n  return (\r\n    <ClickAwayListener onClickAway={() => setOpen(false)}>\r\n      <Tooltip\r\n        PopperProps={{\r\n          disablePortal: true,\r\n        }}\r\n        onClose={() => setOpen(false)}\r\n        open={open}\r\n        disableFocusListener\r\n        disableHoverListener\r\n        disableTouchListener\r\n        title=\"Copied!\"\r\n      >\r\n        <Grid container direction=\"row\" alignItems=\"center\" spacing={1}>\r\n          <Grid item>\r\n            <Typography variant=\"caption\">{INSTALL_TEXT}</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <FileCopyIcon fontSize=\"small\"/>\r\n            {/**\r\n            <Box m={1}>\r\n                  <div\r\n                    onClick={() => {\r\n                      navigator.clipboard.writeText(INSTALL_TEXT)\r\n                      setOpen(true)\r\n                    }}\r\n                  ></div>\r\n            </Box>\r\n            */}\r\n          </Grid>\r\n        </Grid>\r\n      </Tooltip>\r\n    </ClickAwayListener>\r\n  )\r\n}\r\n\r\nexport function Home() {\r\n  const dispatch = useDispatch()\r\n  const primaryColor = useSelector(getPrimaryColor)\r\n  const trigger = useScrollTrigger({target: window ? window : undefined });\r\n  return (\r\n    <div className=\"App-header\">\r\n      <Slide appear={false} direction=\"down\" in={!trigger}>\r\n        <AppBar style={{zIndex: 0, background: '#424242'}}>\r\n          <Grid container direction=\"row\" alignItems=\"center\" justify=\"space-between\" spacing={2}>\r\n            <Grid item>\r\n              <Logo primaryColor={primaryColor} />\r\n            </Grid>\r\n            <Grid item>\r\n              <Install />\r\n            </Grid>\r\n          </Grid>\r\n        </AppBar>\r\n      </Slide>\r\n      <Box m={4} />\r\n      <Typography variant=\"h2\">Github</Typography>\r\n      <Box m={1}>\r\n        <TransitionLink\r\n          color={primaryColor}\r\n          to=\"https://github.com/rhigdon/react-wipes\"\r\n        >https://github.com/rhigdon/react-wipes</TransitionLink>\r\n      </Box>\r\n      <Typography variant=\"h2\">Examples</Typography>\r\n      <AppLink to=\"/clock-wipe\">Clock Wipe</AppLink>\r\n      <AppLink to=\"/star-wipe\">Star Wipe</AppLink>\r\n      <AppLink to=\"/heart-wipe\">Heart Wipe</AppLink>\r\n      <AppLink to=\"/matrix-wipe\">Matrix Wipe</AppLink>\r\n      <AppLink to=\"/scale-up\">Scale Up</AppLink>\r\n      <AppLink to=\"/vertical\">Vertical</AppLink>\r\n      <AppLink to=\"/split-vertical\">Split Vertical</AppLink>\r\n      <AppLink to=\"/diagonal\">Diagonal</AppLink>\r\n      <AppLink to=\"/split-diagonal\">Split Diagonal</AppLink>\r\n      <AppLink to=\"/horizontal\">Horizontal</AppLink>\r\n      <AppLink to=\"/horizontal-reverse\">Horizontal Reverse</AppLink>\r\n      <AppLink to=\"/split-horizontal\">Split Horizontal</AppLink>\r\n      <AppLink to=\"/bounce\">Bounce</AppLink>\r\n      <Typography variant=\"h2\">Color Support</Typography>\r\n      <Box m={3}>\r\n        <CirclePicker onChangeComplete={color => {\r\n          dispatch(setPrimaryColor(color.hex))\r\n        }}/>\r\n      </Box>\r\n      {/**\r\n        <Link className=\"App-link\" to=\"/next\">Matrix</Link>\r\n      */}\r\n      <Box m={5}>\r\n        <Grid container alignItems=\"baseline\" justify=\"center\" spacing={1}>\r\n          <Grid item>\r\n            <Typography>Made with ❤ by</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <TransitionLink\r\n              color={primaryColor}\r\n              overlay={StarWipeOverlay}\r\n              to=\"https://ryanhigdon.com\"\r\n            >Ryan Higdon</TransitionLink>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction AppLink({children, to}) {\r\n  const primaryColor = useSelector(getPrimaryColor)\r\n  const history = useHistory()\r\n  const location = useLocation()\r\n  return (\r\n    <Box m={1}>\r\n      <Link\r\n        replace={true}\r\n        style={{color: primaryColor}}\r\n        onClick={(e)=>{\r\n          location.href=\"/react-wipes#\"+to\r\n          if (location.pathname === to) {\r\n            // history.go()\r\n            window.location.reload(true)\r\n            e.preventDefault()\r\n          }\r\n        }}\r\n        to={to}>\r\n        {children}\r\n      </Link>\r\n    </Box>\r\n  )\r\n}\r\n","export function toggleDarkTheme(){\n  return {\n    type: 'TOGGLE_DARK_THEME',\n  }\n}\n\nexport function setPrimaryColor(color){\n  return {\n    type: 'SET_PRIMARY_COLOR',\n    color,\n  }\n}\n","import React from 'react'\r\nimport {\r\n  ClockWipe,\r\n  DiagonalWipe,\r\n  HorizontalWipe,\r\n  MatrixWipe,\r\n  ScaleWipe,\r\n  SplitHorizontalWipe,\r\n  SplitVerticalWipe,\r\n  StarWipe,\r\n  VerticalWipe,\r\n  withBounceWipe,\r\n} from 'react-wipes'\r\nimport {HeartWipe, SplitDiagonalWipe} from 'react-wipes'\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport {Home} from './views/Home'\r\nimport {useSelector} from 'react-redux'\r\nimport {getPrimaryColor} from './theme/selectors'\r\n\r\nexport function Routes() {\r\n  const primaryColor = useSelector(getPrimaryColor)\r\n  return (\r\n    <Router>\r\n        <Switch>\r\n          <Route path=\"/diagonal\">\r\n            <DiagonalWipe color={primaryColor}>\r\n              <Home />\r\n            </DiagonalWipe>\r\n          </Route>\r\n          <Route path=\"/split-diagonal\">\r\n            <SplitDiagonalWipe color={primaryColor}>\r\n              <Home />\r\n            </SplitDiagonalWipe>\r\n          </Route>\r\n          <Route path=\"/vertical\">\r\n              <VerticalWipe color={primaryColor}>\r\n                <Home />\r\n              </VerticalWipe>\r\n          </Route>\r\n          <Route path=\"/split-vertical\">\r\n              <SplitVerticalWipe color={primaryColor}>\r\n                <Home />\r\n              </SplitVerticalWipe>\r\n          </Route>\r\n          <Route path=\"/heart-wipe\">\r\n              <HeartWipe color={primaryColor}>\r\n                <Home />\r\n              </HeartWipe>\r\n          </Route>\r\n          <Route path=\"/matrix-wipe\">\r\n              <MatrixWipe color={primaryColor}>\r\n                <Home />\r\n              </MatrixWipe>\r\n          </Route>\r\n          <Route path=\"/horizontal\">\r\n              <HorizontalWipe color={primaryColor}>\r\n                <Home />\r\n              </HorizontalWipe>\r\n          </Route>\r\n          <Route path=\"/horizontal-reverse\">\r\n            <HorizontalWipe color={primaryColor} direction='reverse'>\r\n              <Home />\r\n            </HorizontalWipe>\r\n          </Route>\r\n          <Route path=\"/split-horizontal\">\r\n              <SplitHorizontalWipe color={primaryColor}>\r\n                <Home />\r\n              </SplitHorizontalWipe>\r\n          </Route>\r\n          <Route path=\"/scale-up\">\r\n              <ScaleWipe color={primaryColor}>\r\n                <Home />\r\n              </ScaleWipe>\r\n          </Route>\r\n          <Route path=\"/star-wipe\">\r\n              <StarWipe color={primaryColor}>\r\n                <Home />\r\n              </StarWipe>\r\n          </Route>\r\n          <Route component={withBounceWipe(Home, primaryColor)} path=\"/bounce\" />\r\n          <Route path=\"/clock-wipe\">\r\n            <ClockWipe color={primaryColor}>\r\n              <Home />\r\n            </ClockWipe>\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n    </Router>\r\n  )\r\n}\r\n","import { createMuiTheme } from '@material-ui/core';\n// const darkTheme = createMuiTheme({\n//   palette: {\n//     type: 'dark',\n//   },\n// });\n// import purple from '@material-ui/core/colors/purple';\n// import green from '@material-ui/core/colors/green';\n// import orange from '@material-ui/core/colors/orange';\n// import red from '@material-ui/core/colors/red';\nimport { colors } from '@material-ui/core';\nimport brown from '@material-ui/core/colors/brown';\n\nexport const darkTheme = createMuiTheme({\n  palette: {\n    primary: colors.orange,\n    // secondary: green,\n    type: 'dark',\n  },\n});\nexport const theme = createMuiTheme({\n  zIndex: {\n    appBar: 1200,\n    drawer: 1100\n  },\n  palette: {\n    primary: colors.orange,\n    type: 'light',\n  },\n});\n\n\nexport const generateTheme = (primaryColor, isDarkTheme) => {\n  let color = colors.orange\n  if (primaryColor === \"GREEN\"){\n    color = colors.green;\n  } else if (primaryColor === \"LIGHT_GREEN\"){\n    color = colors.lightGreen;\n  } else if (primaryColor === \"BLUE\"){\n    color = colors.blue;\n  } else if (primaryColor === \"PURPLE\"){\n    color = colors.purple;\n  } else if (primaryColor === \"ORANGE\"){\n    color = colors.orange;\n  } else if (primaryColor === \"LIME\") {\n    color = colors.lime;\n  } else if (primaryColor === \"RED\"){\n    color = colors.red;\n  } else if (primaryColor === \"LIGHT_BLUE\"){\n    color = colors.lightBlue;\n  } else if (primaryColor === \"BLUE_GREY\"){\n    color = colors.blueGrey;\n  } else if (primaryColor === \"LIGHT_BROWN\"){\n    color = {main:brown[300]};\n  }\n  return createMuiTheme({\n    zIndex: {\n      appBar: 1200,\n      drawer: 1100\n    },\n    palette: {\n      primary: color,\n      // secondary: green,\n      type: isDarkTheme ? 'dark' : 'light',\n    },\n  })\n}\n","const initialState = {\n  isDarkTheme: localStorage.getItem('isDarkTheme') || false,\n  primaryColor: localStorage.getItem('primaryColor') || \"ORANGE\",\n};\n\nexport function themeReducer(state=initialState, action){\n  switch (action.type) {\n    case \"TOGGLE_DARK_THEME\":\n      localStorage.setItem('isDarkTheme', !state.isDarkTheme);\n      return {\n        ...state,\n        isDarkTheme: !state.isDarkTheme\n      }\n    case \"SET_PRIMARY_COLOR\":\n      localStorage.setItem('primaryColor', action.color);\n      return {\n        ...state,\n        primaryColor: action.color,\n      }\n    default:\n      return state;\n  }\n}\n","import { combineReducers, createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {themeReducer} from './theme/reducer'\r\n\r\nconst rootReducer = combineReducers({\r\n  themeReducer,\r\n})\r\n\r\nexport default createStore(rootReducer, applyMiddleware(thunk));\r\n","import React from 'react';\nimport { Provider, useSelector } from 'react-redux'\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport './App.css';\nimport {Routes} from './Routes'\nimport {generateTheme} from './theme';\nimport store from './store'\nimport {getPrimaryColor, isDarkTheme} from \"./theme/selectors\";\n\nfunction ConnectedApp() {\n  const primaryColor = useSelector(getPrimaryColor)\n  const darkTheme = useSelector(isDarkTheme)\n  return (\n    <ThemeProvider\n      theme={generateTheme(primaryColor, darkTheme)}\n    >\n      <CssBaseline />\n      <Routes />\n    </ThemeProvider>\n  )\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <ConnectedApp />\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}