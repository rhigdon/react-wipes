{"version":3,"sources":["theme/selectors.js","views/Home.jsx","theme/actions.js","Routes.jsx","theme/index.js","theme/reducer.js","store.js","App.js","serviceWorker.js","index.js"],"names":["getState","state","themeReducer","isDarkTheme","getPrimaryColor","primaryColor","Logo","Grid","container","alignItems","Tooltip","title","Box","m","alt","className","width","src","Typography","variant","style","color","to","Install","React","useState","open","setOpen","direction","justify","item","ClickAwayListener","onClickAway","PopperProps","disablePortal","onClose","disableFocusListener","disableHoverListener","disableTouchListener","cursor","onClick","navigator","clipboard","writeText","fontSize","Home","dispatch","useDispatch","useSelector","trigger","useScrollTrigger","target","window","undefined","Slide","appear","in","AppBar","zIndex","background","spacing","AppLink","onChangeComplete","type","setPrimaryColor","hex","role","aria-label","overlay","StarWipeOverlay","children","location","useLocation","replace","e","href","pathname","reload","preventDefault","Routes","path","message","component","withBounceWipe","generateTheme","createMuiTheme","palette","primary","colors","orange","appBar","drawer","green","lightGreen","blue","purple","lime","red","lightBlue","blueGrey","main","brown","initialState","localStorage","getItem","rootReducer","combineReducers","action","setItem","createStore","applyMiddleware","thunk","ConnectedApp","darkTheme","ThemeProvider","theme","CssBaseline","App","store","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.0dd950b9.chunk.js","sourcesContent":["function getState(state){\r\n  return state.themeReducer;\r\n}\r\nexport function isDarkTheme(state){\r\n  return getState(state).isDarkTheme;\r\n}\r\nexport function getPrimaryColor(state){\r\n  return getState(state).primaryColor;\r\n}\r\n","import React from 'react'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Box from '@material-ui/core/Box'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Slide from '@material-ui/core/Slide'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger'\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy'\r\nimport {TransitionLink} from 'react-wipes'\r\nimport {Overlay as StarWipeOverlay} from 'react-wipes/StarWipe'\r\nimport {Link, useLocation} from \"react-router-dom\";\r\nimport {CirclePicker} from 'react-color'\r\nimport {setPrimaryColor} from '../theme/actions'\r\nimport {getPrimaryColor} from \"../theme/selectors\";\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport './Home.css'\r\n\r\nfunction Logo({primaryColor}) {\r\n  return (\r\n    <Grid container alignItems=\"center\">\r\n      <Tooltip title=\"React Wipes are reel fun.\">\r\n        <Box m={1}>\r\n          <img\r\n            alt=\"left-title-icon\"\r\n            className=\"logo-icon\"\r\n            width=\"20px\"\r\n            src=\"/react-wipes/cinema_icon.svg\"\r\n          />\r\n        </Box>\r\n      </Tooltip>\r\n      <Typography variant=\"subtitle1\">\r\n        <Link\r\n          style={{color: primaryColor}}\r\n          to=\"/\"\r\n        >React Wipes</Link>\r\n      </Typography>\r\n      <Tooltip title=\"Use them once, and they'll reel you in.\">\r\n        <Box m={1}>\r\n          <img\r\n            alt=\"right-title-icon\"\r\n            className=\"right-logo-icon\"\r\n            width=\"20px\"\r\n            src=\"/react-wipes/cinema_icon.svg\"\r\n          />\r\n        </Box>\r\n      </Tooltip>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nfunction Install() {\r\n  const INSTALL_TEXT = \"yarn add react-wipes\"\r\n  const [open, setOpen] = React.useState(false)\r\n  return (\r\n    <Grid container direction=\"row\" justify=\"center\">\r\n      <Grid item>\r\n        <Typography variant=\"caption\">{INSTALL_TEXT}</Typography>\r\n      </Grid>\r\n      <Grid item>\r\n        <Box m={1}>\r\n          <ClickAwayListener onClickAway={() => setOpen(false)}>\r\n            <Tooltip\r\n              PopperProps={{\r\n                disablePortal: true,\r\n              }}\r\n              onClose={() => setOpen(false)}\r\n              open={open}\r\n              disableFocusListener\r\n              disableHoverListener\r\n              disableTouchListener\r\n              title=\"Copied!\"\r\n            >\r\n              <div\r\n                style={{cursor: 'pointer'}}\r\n                onClick={() => {\r\n                  navigator.clipboard.writeText(INSTALL_TEXT)\r\n                  setOpen(true)\r\n                }}\r\n              ><FileCopyIcon fontSize=\"small\"/></div>\r\n            </Tooltip>\r\n          </ClickAwayListener>\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport function Home() {\r\n  const dispatch = useDispatch()\r\n  const primaryColor = useSelector(getPrimaryColor)\r\n  const trigger = useScrollTrigger({target: window ? window : undefined });\r\n  return (\r\n    <div className=\"App-header\">\r\n      <Slide appear={false} direction=\"down\" in={!trigger}>\r\n        <AppBar style={{zIndex: 0, background: '#424242'}}>\r\n          <Grid container direction=\"row\" alignItems=\"center\" justify=\"space-between\" spacing={2}>\r\n            <Grid item>\r\n              <Logo primaryColor={primaryColor} />\r\n            </Grid>\r\n            <Grid item>\r\n              <Install />\r\n            </Grid>\r\n          </Grid>\r\n        </AppBar>\r\n      </Slide>\r\n      <Box m={4} />\r\n      <Typography variant=\"h2\">Github</Typography>\r\n      <Box m={1}>\r\n        <TransitionLink\r\n          color={primaryColor}\r\n          to=\"https://github.com/rhigdon/react-wipes\"\r\n        >https://github.com/rhigdon/react-wipes</TransitionLink>\r\n      </Box>\r\n      <Typography variant=\"h2\">Examples</Typography>\r\n      <AppLink to=\"/clock-wipe\">Clock Wipe</AppLink>\r\n      <AppLink to=\"/star-wipe\">Star Wipe</AppLink>\r\n      <AppLink to=\"/heart-wipe\">Heart Wipe</AppLink>\r\n      <AppLink to=\"/matrix-wipe\">Matrix Wipe</AppLink>\r\n      <AppLink to=\"/scale-up\">Scale Up</AppLink>\r\n      <AppLink to=\"/vertical\">Vertical</AppLink>\r\n      <AppLink to=\"/split-vertical\">Split Vertical</AppLink>\r\n      <AppLink to=\"/diagonal\">Diagonal</AppLink>\r\n      <AppLink to=\"/split-diagonal\">Split Diagonal</AppLink>\r\n      <AppLink to=\"/horizontal\">Horizontal</AppLink>\r\n      <AppLink to=\"/horizontal-reverse\">Horizontal Reverse</AppLink>\r\n      <AppLink to=\"/split-horizontal\">Split Horizontal</AppLink>\r\n      <AppLink to=\"/bounce\">Bounce</AppLink>\r\n      <Typography variant=\"h2\">Color Support</Typography>\r\n      <Box m={3}>\r\n        <CirclePicker onChangeComplete={color => {\r\n          dispatch(setPrimaryColor(color.hex))\r\n        }}/>\r\n      </Box>\r\n      {/**\r\n        <Link className=\"App-link\" to=\"/next\">Matrix</Link>\r\n      */}\r\n      <Typography variant=\"h2\">NPM</Typography>\r\n      <Box m={1}>\r\n        <TransitionLink\r\n          color={primaryColor}\r\n          to=\"https://www.npmjs.com/package/react-wipes\"\r\n        >https://www.npmjs.com/package/react-wipes</TransitionLink>\r\n      </Box>\r\n      <Box m={5}>\r\n        <Grid container alignItems=\"baseline\" justify=\"center\" spacing={1}>\r\n          <Grid item>\r\n            <Typography>Made with <span role=\"img\" aria-label=\"heart\">❤️</span> by</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <TransitionLink\r\n              color={primaryColor}\r\n              overlay={StarWipeOverlay}\r\n              to=\"https://ryanhigdon.com\"\r\n            >Ryan Higdon</TransitionLink>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction AppLink({children, to}) {\r\n  const primaryColor = useSelector(getPrimaryColor)\r\n  const location = useLocation()\r\n  return (\r\n    <Box m={1}>\r\n      <Link\r\n        replace={true}\r\n        style={{color: primaryColor}}\r\n        onClick={(e)=>{\r\n          location.href=\"/react-wipes#\"+to\r\n          if (location.pathname === to) {\r\n            window.location.reload(true)\r\n            e.preventDefault()\r\n          }\r\n        }}\r\n        to={to}>\r\n        {children}\r\n      </Link>\r\n    </Box>\r\n  )\r\n}\r\n","export function toggleDarkTheme(){\r\n  return {\r\n    type: 'TOGGLE_DARK_THEME',\r\n  }\r\n}\r\n\r\nexport function setPrimaryColor(color){\r\n  return {\r\n    type: 'SET_PRIMARY_COLOR',\r\n    color,\r\n  }\r\n}\r\n","import React from 'react'\r\nimport {\r\n  ClockWipe,\r\n  DiagonalWipe,\r\n  HorizontalWipe,\r\n  MatrixWipe,\r\n  ScaleWipe,\r\n  StarWipe,\r\n  VerticalWipe,\r\n  withBounceWipe,\r\n  HeartWipe,\r\n  SplitDiagonalWipe,\r\n  SplitHorizontalWipe,\r\n  SplitVerticalWipe\r\n} from 'react-wipes'\r\nimport {} from 'react-wipes'\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport {Home} from './views/Home'\r\nimport {useSelector} from 'react-redux'\r\nimport {getPrimaryColor} from './theme/selectors'\r\n\r\nexport function Routes() {\r\n  const primaryColor = useSelector(getPrimaryColor)\r\n  return (\r\n    <Router>\r\n        <Switch>\r\n          <Route path=\"/diagonal\">\r\n            <DiagonalWipe color={primaryColor}>\r\n              <Home />\r\n            </DiagonalWipe>\r\n          </Route>\r\n          <Route path=\"/split-diagonal\">\r\n            <SplitDiagonalWipe color={primaryColor}>\r\n              <Home />\r\n            </SplitDiagonalWipe>\r\n          </Route>\r\n          <Route path=\"/vertical\">\r\n              <VerticalWipe color={primaryColor}>\r\n                <Home />\r\n              </VerticalWipe>\r\n          </Route>\r\n          <Route path=\"/split-vertical\">\r\n              <SplitVerticalWipe color={primaryColor}>\r\n                <Home />\r\n              </SplitVerticalWipe>\r\n          </Route>\r\n          <Route path=\"/heart-wipe\">\r\n              <HeartWipe color={primaryColor}>\r\n                <Home />\r\n              </HeartWipe>\r\n          </Route>\r\n          <Route path=\"/matrix-wipe\">\r\n              <MatrixWipe color={primaryColor}>\r\n                <Home />\r\n              </MatrixWipe>\r\n          </Route>\r\n          <Route path=\"/horizontal\">\r\n              <HorizontalWipe color={primaryColor}>\r\n                <Home />\r\n              </HorizontalWipe>\r\n          </Route>\r\n          <Route path=\"/horizontal-reverse\">\r\n            <HorizontalWipe color={primaryColor} direction='reverse'>\r\n              <Home />\r\n            </HorizontalWipe>\r\n          </Route>\r\n          <Route path=\"/split-horizontal\">\r\n              <SplitHorizontalWipe color={primaryColor} message='Testing'>\r\n                <Home />\r\n              </SplitHorizontalWipe>\r\n          </Route>\r\n          <Route path=\"/scale-up\">\r\n              <ScaleWipe color={primaryColor}>\r\n                <Home />\r\n              </ScaleWipe>\r\n          </Route>\r\n          <Route path=\"/star-wipe\">\r\n              <StarWipe color={primaryColor}>\r\n                <Home />\r\n              </StarWipe>\r\n          </Route>\r\n          <Route component={withBounceWipe(Home, primaryColor)} path=\"/bounce\" />\r\n          <Route path=\"/clock-wipe\">\r\n            <ClockWipe color={primaryColor} message={<div style={{background: 'white'}}>This is an example of a custom message!</div>}>\r\n              <Home />\r\n            </ClockWipe>\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n    </Router>\r\n  )\r\n}\r\n","import { createMuiTheme } from '@material-ui/core';\r\n// const darkTheme = createMuiTheme({\r\n//   palette: {\r\n//     type: 'dark',\r\n//   },\r\n// });\r\n// import purple from '@material-ui/core/colors/purple';\r\n// import green from '@material-ui/core/colors/green';\r\n// import orange from '@material-ui/core/colors/orange';\r\n// import red from '@material-ui/core/colors/red';\r\nimport { colors } from '@material-ui/core';\r\nimport brown from '@material-ui/core/colors/brown';\r\n\r\nexport const darkTheme = createMuiTheme({\r\n  palette: {\r\n    primary: colors.orange,\r\n    // secondary: green,\r\n    type: 'dark',\r\n  },\r\n});\r\nexport const theme = createMuiTheme({\r\n  zIndex: {\r\n    appBar: 1200,\r\n    drawer: 1100\r\n  },\r\n  palette: {\r\n    primary: colors.orange,\r\n    type: 'light',\r\n  },\r\n});\r\n\r\n\r\nexport const generateTheme = (primaryColor, isDarkTheme) => {\r\n  let color = colors.orange\r\n  if (primaryColor === \"GREEN\"){\r\n    color = colors.green;\r\n  } else if (primaryColor === \"LIGHT_GREEN\"){\r\n    color = colors.lightGreen;\r\n  } else if (primaryColor === \"BLUE\"){\r\n    color = colors.blue;\r\n  } else if (primaryColor === \"PURPLE\"){\r\n    color = colors.purple;\r\n  } else if (primaryColor === \"ORANGE\"){\r\n    color = colors.orange;\r\n  } else if (primaryColor === \"LIME\") {\r\n    color = colors.lime;\r\n  } else if (primaryColor === \"RED\"){\r\n    color = colors.red;\r\n  } else if (primaryColor === \"LIGHT_BLUE\"){\r\n    color = colors.lightBlue;\r\n  } else if (primaryColor === \"BLUE_GREY\"){\r\n    color = colors.blueGrey;\r\n  } else if (primaryColor === \"LIGHT_BROWN\"){\r\n    color = {main:brown[300]};\r\n  }\r\n  return createMuiTheme({\r\n    zIndex: {\r\n      appBar: 1200,\r\n      drawer: 1100\r\n    },\r\n    palette: {\r\n      primary: color,\r\n      // secondary: green,\r\n      type: isDarkTheme ? 'dark' : 'light',\r\n    },\r\n  })\r\n}\r\n","const initialState = {\r\n  isDarkTheme: localStorage.getItem('isDarkTheme') || false,\r\n  primaryColor: localStorage.getItem('primaryColor') || \"#e91e63\",\r\n};\r\n\r\nexport function themeReducer(state=initialState, action){\r\n  switch (action.type) {\r\n    case \"TOGGLE_DARK_THEME\":\r\n      localStorage.setItem('isDarkTheme', !state.isDarkTheme);\r\n      return {\r\n        ...state,\r\n        isDarkTheme: !state.isDarkTheme\r\n      }\r\n    case \"SET_PRIMARY_COLOR\":\r\n      localStorage.setItem('primaryColor', action.color);\r\n      return {\r\n        ...state,\r\n        primaryColor: action.color,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers, createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {themeReducer} from './theme/reducer'\r\n\r\nconst rootReducer = combineReducers({\r\n  themeReducer,\r\n})\r\n\r\nexport default createStore(rootReducer, applyMiddleware(thunk));\r\n","import React from 'react';\r\nimport { Provider, useSelector } from 'react-redux'\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport './App.css';\r\nimport {Routes} from './Routes'\r\nimport {generateTheme} from './theme';\r\nimport store from './store'\r\nimport {getPrimaryColor, isDarkTheme} from \"./theme/selectors\";\r\n\r\nfunction ConnectedApp() {\r\n  const primaryColor = useSelector(getPrimaryColor)\r\n  const darkTheme = useSelector(isDarkTheme)\r\n  return (\r\n    <ThemeProvider\r\n      theme={generateTheme(primaryColor, darkTheme)}\r\n    >\r\n      <CssBaseline />\r\n      <Routes />\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <ConnectedApp />\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}