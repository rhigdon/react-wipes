{"version":3,"sources":["lib/src/BounceWipe.jsx","lib/src/TransitionLink.jsx","App.js","serviceWorker.js","index.js"],"names":["BounceWipe","props","children","ref","useRef","useState","isVisible","setIsVisible","useEffect","t","anime","timeline","add","targets","current","translateY","window","innerHeight","easing","finished","then","style","display","position","width","height","top","overflow","backgroundColor","Overlay","start","onFinish","React","console","log","timeout","setTimeout","clearTimeout","left","background","className","transition","Shape","TransitionLink","to","setStart","cursor","open","onClick","preserveAspectRatio","viewBox","xmlns","d","Home","Typography","variant","href","rel","target","AppLink","Box","m","Grid","container","alignItems","location","hash","reload","App","path","direction","component","Component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"yUAGWA,EAAa,SAACC,GAAW,IACzBC,EAAYD,EAAZC,SACHC,EAAMC,iBAAO,MAFc,EAGGC,oBAAS,GAHZ,mBAGxBC,EAHwB,KAGbC,EAHa,KAuB/B,OAlBAC,qBAAU,WACN,IAAIC,EAAIC,QAAMC,WAEdF,EAAEG,IAAI,CACJC,QAASV,EAAIW,QACbC,WAAYC,OAAOC,YACnBC,OAAQ,kBAETN,IAAI,CACDC,QAASV,EAAIW,QACbC,WAAW,KAAD,OAA4B,EAArBC,OAAOC,eAG5BR,EAAEU,SAASC,MAAK,WACZb,GAAa,SAKjB,6BACI,yBAAKc,MAAO,CACRC,QAAShB,EAAY,QAAU,OAC/BiB,SAAU,WACVC,MAAO,OACPC,OAAQ,OACRC,IAAK,EACLC,SAAU,WAEV,yBAAKN,MAAO,CAAEC,QAAS,OAAQE,MAAO,OAAQC,OAAQ,SACtD,yBACItB,IAAKA,EACLkB,MAAO,CACHG,MAAO,OACPC,OAAQ,OACRG,gBAAiB,eAG5B1B,IC3Cb,SAAS2B,EAAT,GAAqC,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,SAavB,OAZAC,IAAMxB,WAAU,WACd,GAAKsB,EAAL,CACAG,QAAQC,IACN,kBAEF,IAAIC,EAAUC,YAAW,WACvBL,MACC,KACH,OAAO,WACLM,aAAaF,OAEd,CAACL,EAAOC,IAET,yBAAKV,MAAO,CACVC,QAASQ,EAAQ,QAAU,OAC3BP,SAAU,WACVC,MAAO,OACPC,OAAQ,OACRC,IAAK,EACLY,KAAM,IAEN,yBACEjB,MAAO,CACLG,MAAO,OACPe,WAAY,WAEdC,UAAU,aAEZ,yBACEnB,MAAO,CACLkB,WAAY,UACZf,MAAO,OACPiB,WAAY,eAGhB,kBAACC,EAAD,OAKC,SAASC,EAAT,GAAwC,IAAfzC,EAAc,EAAdA,SAAU0C,EAAI,EAAJA,GAAI,EAClBZ,IAAM3B,UAAS,GADG,mBACrCyB,EADqC,KAC9Be,EAD8B,KAE5C,OACE,yBAAKxB,MAAO,CAACyB,OAAO,YAClB,kBAACjB,EAAD,CAASC,MAAOA,EAAOC,SAAU,WAC/Bf,OAAO+B,KAAKH,EAAI,aAElB,uBAAGJ,UAAU,WAAWQ,QAAS,kBAAIH,GAAS,KAC3C3C,IAMT,SAASwC,IACP,OACE,yBACEF,UAAU,QACVS,oBAAoB,OAAOC,QAAQ,eACnCC,MAAM,8BAEN,0BAAMC,EAAE,uLCiBd,SAASC,IACP,OACE,yBAAKb,UAAU,cACb,kBAACc,EAAA,EAAD,CAAYC,QAAQ,MAApB,eACA,kBAACD,EAAA,EAAD,CAAYC,QAAQ,MAApB,UACA,uBACEf,UAAU,WACVgB,KAAK,yCACLZ,GAAG,GACHa,IAAI,sBACJC,OAAO,UALT,0CAOA,kBAACJ,EAAA,EAAD,CAAYC,QAAQ,MAApB,WACA,kBAACD,EAAA,EAAD,CAAYC,QAAQ,aAApB,2BACA,kBAACD,EAAA,EAAD,CAAYC,QAAQ,MAApB,SACA,kBAACD,EAAA,EAAD,CAAYC,QAAQ,aAApB,mCACA,kBAACD,EAAA,EAAD,CAAYC,QAAQ,MAApB,YACA,kBAACI,EAAD,CAASf,GAAG,YAAZ,YACA,kBAACe,EAAD,CAASf,GAAG,kBAAZ,kBACA,kBAACe,EAAD,CAASf,GAAG,YAAZ,YAIA,kBAACe,EAAD,CAASf,GAAG,cAAZ,cACA,kBAACe,EAAD,CAASf,GAAG,sBAAZ,sBACA,kBAACe,EAAD,CAASf,GAAG,YAAZ,YACA,kBAACe,EAAD,CAASf,GAAG,aAAZ,aACA,kBAACe,EAAD,CAASf,GAAG,oBAAZ,oBACA,kBAACe,EAAD,CAASf,GAAG,UAAZ,UACA,kBAACe,EAAD,CAASf,GAAG,cAAZ,cAMA,kBAACgB,EAAA,EAAD,CAAKC,EAAG,GACN,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,WAAW,UACzB,kBAACV,EAAA,EAAD,4BACA,kBAACX,EAAD,CACEH,UAAU,WACVI,GAAG,0BAFL,yBASV,SAASe,EAAT,GAAwB,IAANf,EAAK,EAALA,GAChB,OACE,kBAAC,IAAD,CAAMJ,UAAU,WAAWQ,QAAS,WAClChC,OAAOiD,SAAST,KAAK,gBAAgBZ,EACjC5B,OAAOiD,SAASC,OAAU,IAAMtB,GAClC5B,OAAOiD,SAASE,UAEjBvB,GAAIA,GAAKA,GAKDwB,MApHf,WACE,OACE,kBAAC,IAAD,KACI,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,aACV,kBAAC,eAAD,KACE,kBAAChB,EAAD,QAGJ,kBAAC,IAAD,CAAOgB,KAAK,aACR,kBAAC,eAAD,KACE,kBAAChB,EAAD,QAGN,kBAAC,IAAD,CAAOgB,KAAK,mBACR,kBAAC,oBAAD,KACE,kBAAChB,EAAD,QAGN,kBAAC,IAAD,CAAOgB,KAAK,eACR,kBAAC,iBAAD,KACE,kBAAChB,EAAD,QAGN,kBAAC,IAAD,CAAOgB,KAAK,uBACV,kBAAC,iBAAD,CAAgBC,UAAU,WACxB,kBAACjB,EAAD,QAGJ,kBAAC,IAAD,CAAOgB,KAAK,qBACR,kBAAC,sBAAD,KACE,kBAAChB,EAAD,QAGN,kBAAC,IAAD,CAAOgB,KAAK,aACR,kBAAC,YAAD,KACE,kBAAChB,EAAD,QAGN,kBAAC,IAAD,CAAOgB,KAAK,cACR,kBAAC,WAAD,KACE,kBAAChB,EAAD,QAGN,kBAAC,IAAD,CAAOkB,WFnBaC,EEmBanB,EFnBA,YAAiB,IAAZpD,EAAW,oBACzD,OACE,kBAAC,EAAD,KACE,kBAACuE,EAAcvE,MEgB6BoE,KAAK,YAC7C,kBAAC,IAAD,CAAOA,KAAK,eACV,kBAAC,YAAD,KACE,kBAAChB,EAAD,QAGJ,kBAAC,IAAD,CAAOgB,KAAK,KACV,kBAAChB,EAAD,SF1BkB,IAAAmB,GGrCVC,QACW,cAA7BzD,OAAOiD,SAASS,UAEe,UAA7B1D,OAAOiD,SAASS,UAEhB1D,OAAOiD,SAASS,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB/D,MAAK,SAAAgE,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLtD,QAAQsD,MAAMA,EAAMC,c","file":"static/js/main.f265e1cf.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport {anime} from 'react-anime';\r\n\r\nexport let BounceWipe = (props) => {\r\n    const {children} = props\r\n    let ref = useRef(null);\r\n    const [isVisible, setIsVisible] = useState(true);\r\n\r\n    useEffect(() => {\r\n        let t = anime.timeline();\r\n\r\n        t.add({\r\n          targets: ref.current,\r\n          translateY: window.innerHeight,\r\n          easing: 'easeInOutSine'\r\n        })\r\n        .add({\r\n            targets: ref.current,\r\n            translateY: `-=${window.innerHeight * 2}`\r\n        })\r\n\r\n        t.finished.then(() => {\r\n            setIsVisible(false)\r\n        })\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <div style={{\r\n                display: isVisible ? \"block\" : \"none\",\r\n                position: \"absolute\",\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n                top: 0,\r\n                overflow: \"hidden\",\r\n            }}>\r\n                <div style={{ display: \"flex\", width: \"100%\", height: \"100%\" }}>\r\n                <div\r\n                    ref={ref}\r\n                    style={{\r\n                        width: '100%',\r\n                        height: '100%',\r\n                        backgroundColor: '#61dafb'\r\n                    }}></div>\r\n            </div></div>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\nexport const withBounceWipe = Component => ({...props}) => {\r\n  return (\r\n    <BounceWipe>\r\n      <Component {...props} />\r\n    </BounceWipe>\r\n  )\r\n}\r\n","import React from \"react\"\n\nfunction Overlay({start, onFinish}) {\n  React.useEffect(() => {\n    if (!start) return\n    console.log(\n      'hey ho lets go'\n    )\n    let timeout = setTimeout(()=>{\n      onFinish()\n    }, 900)\n    return ()=>{\n      clearTimeout(timeout)\n    };\n  }, [start, onFinish])\n  return (\n    <div style={{\n      display: start ? \"block\" : \"none\",\n      position: \"absolute\",\n      width: \"100%\",\n      height: \"100%\",\n      top: 0,\n      left: 0,\n    }}>\n      <div\n        style={{\n          width: \"100%\",\n          background: '#0b556a',\n        }}\n        className=\"vertical\"\n      />\n      <div\n        style={{\n          background: '#0b556a',\n          width: \"100%\",\n          transition: \"height 1s\",\n        }}\n      />\n      <Shape />\n    </div>\n  )\n}\n\nexport function TransitionLink({children, to}){\n  const [start, setStart] = React.useState(false)\n  return (\n    <div style={{cursor:'pointer'}}>\n      <Overlay start={start} onFinish={()=>{\n        window.open(to, '_blank');\n      }} />\n      <a className=\"App-link\" onClick={()=>setStart(true)}>\n        {children}\n      </a>\n    </div>\n  )\n}\n\nfunction Shape (){\n  return (\n    <svg\n      className=\"shape\"\n      preserveAspectRatio=\"none\" viewBox=\"0 0 1440 100\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      >\n      <path d=\"M -44,-50 C -52.71,28.52 15.86,8.186 184,14.69 383.3,22.39 462.5,12.58 638,14 835.5,15.6 987,6.4 1194,13.86 1661,30.68 1652,-36.74 1582,-140.1 1512,-243.5 15.88,-589.5 -44,-50 Z\">\n      </path>\n    </svg>\n  )\n}\n","import Box from '@material-ui/core/Box'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport React from 'react';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link,\n} from \"react-router-dom\";\nimport './App.css';\nimport {\n  ClockWipe,\n  DiagonalWipe,\n  HorizontalWipe,\n  ScaleWipe,\n  SplitHorizontalWipe,\n  SplitVerticalWipe,\n  StarWipe,\n  VerticalWipe\n} from 'react-wipes/dist'\nimport {withBounceWipe} from './lib/src/BounceWipe'\nimport {TransitionLink} from './lib/src/TransitionLink'\n\nfunction App() {\n  return (\n    <Router>\n        <Switch>\n          <Route path=\"/diagonal\">\n            <DiagonalWipe>\n              <Home />\n            </DiagonalWipe>\n          </Route>\n          <Route path=\"/vertical\">\n              <VerticalWipe>\n                <Home />\n              </VerticalWipe>\n          </Route>\n          <Route path=\"/split-vertical\">\n              <SplitVerticalWipe>\n                <Home />\n              </SplitVerticalWipe>\n          </Route>\n          <Route path=\"/horizontal\">\n              <HorizontalWipe>\n                <Home />\n              </HorizontalWipe>\n          </Route>\n          <Route path=\"/horizontal-reverse\">\n            <HorizontalWipe direction='reverse'>\n              <Home />\n            </HorizontalWipe>\n          </Route>\n          <Route path=\"/split-horizontal\">\n              <SplitHorizontalWipe>\n                <Home />\n              </SplitHorizontalWipe>\n          </Route>\n          <Route path=\"/scale-up\">\n              <ScaleWipe>\n                <Home />\n              </ScaleWipe>\n          </Route>\n          <Route path=\"/star-wipe\">\n              <StarWipe>\n                <Home />\n              </StarWipe>\n          </Route>\n          <Route component={withBounceWipe(Home)} path=\"/bounce\" />\n          <Route path=\"/clock-wipe\">\n            <ClockWipe>\n              <Home />\n            </ClockWipe>\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n    </Router>\n  );\n}\nfunction Home() {\n  return (\n    <div className=\"App-header\">\n      <Typography variant=\"h1\">React Wipes</Typography>\n      <Typography variant=\"h2\">Github</Typography>\n      <a\n        className=\"App-link\"\n        href=\"https://github.com/rhigdon/react-wipes\"\n        to=\"\"\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n      >https://github.com/rhigdon/react-wipes</a>\n      <Typography variant=\"h2\">Install</Typography>\n      <Typography variant=\"subtitle1\">npm install react-wipes</Typography>\n      <Typography variant=\"h2\">Usage</Typography>\n      <Typography variant=\"subtitle1\">Internal Links / External Links</Typography>\n      <Typography variant=\"h2\">Examples</Typography>\n      <AppLink to=\"vertical\">Vertical</AppLink>\n      <AppLink to=\"split-vertical\">Split Vertical</AppLink>\n      <AppLink to=\"diagonal\">Diagonal</AppLink>\n      {/**\n      <Link className=\"App-link\" to=\"/diagonal\">Split Diagonal</Link>\n      */}\n      <AppLink to=\"horizontal\">Horizontal</AppLink>\n      <AppLink to=\"horizontal-reverse\">Horizontal Reverse</AppLink>\n      <AppLink to=\"scale-up\">Scale Up</AppLink>\n      <AppLink to=\"star-wipe\">Star Wipe</AppLink>\n      <AppLink to=\"split-horizontal\">Split Horizontal</AppLink>\n      <AppLink to=\"bounce\">Bounce</AppLink>\n      <AppLink to=\"clock-wipe\">Clock Wipe</AppLink>\n      {/**\n        <Link className=\"App-link\" to=\"/next\">Matrix</Link>\n        <Link className=\"App-link\" to=\"/next\">Heart</Link>\n        <Link className=\"App-link\" to=\"/next\">Clock Wipe</Link>\n      */}\n      <Box m={5}>\n        <Grid container alignItems=\"center\">\n          <Typography>Made with ❤ by</Typography>\n          <TransitionLink\n            className=\"App-link\"\n            to=\"https://ryanhigdon.com\">www.ryanhigdon.com</TransitionLink>\n        </Grid>\n      </Box>\n    </div>\n  )\n}\n\nfunction AppLink({to}) {\n  return (\n    <Link className=\"App-link\" onClick={()=>{\n      window.location.href=\"/react-wipes#\"+to\n      if (window.location.hash === (\"#\" + to)) {\n        window.location.reload()\n      }\n    }} to={to}>{to}</Link>\n  )\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}